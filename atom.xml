<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zt&#39;s Blog</title>
  
  
  <link href="https://withesse.co/atom.xml" rel="self"/>
  
  <link href="https://withesse.co/"/>
  <updated>2024-04-01T11:00:00.000Z</updated>
  <id>https://withesse.co/</id>
  
  <author>
    <name>zt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>转译-15个适用于学术写作的ChatGPT Prompts（15 ChatGPT Prompts for Academic Writing）</title>
    <link href="https://withesse.co/post/chatgpt-prompts-for-academic-writing/"/>
    <id>https://withesse.co/post/chatgpt-prompts-for-academic-writing/</id>
    <published>2024-04-01T11:00:00.000Z</published>
    <updated>2024-04-01T11:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>文章转译自</p><p><a href="https://www.godofprompt.ai/blog/chatgpt-prompts-for-academic-writing">https://www.godofprompt.ai/blog/chatgpt-prompts-for-academic-writing</a></p><p><a href="https://igeekbb.com/2024/04/02/academicprompts/#15%20%E4%B8%AA%20ChatGPT%20Prompts%20%E5%8A%A9%E5%8A%9B%E5%AD%A6%E6%9C%AF%E5%86%99%E4%BD%9C">转译-15个适用于学术写作的 ChatGPT Prompts</a> 。</p>          </div><blockquote><p>Academic writing can be tough. To get a better result, you have to research new ideas and translate them into formal writing. </p><p>Not to talk of the stress of fact checking, citing sources correctly, and keeping your writing neutral.</p><p>But, there's good news! ChatGPT can be your secret tool for academic writing. </p><p>This post will show you 10 ChatGPT prompts that will help you when writing.</p><p>With these prompts, ChatGPT can help you find great essay topics, structure your argument, and even add some style to your writing.</p><p>It can also help you organize your thoughts and turn a lot of information into a well-structured essay.</p><p>Keep reading to discover how ChatGPT can be of help when writing your academic paper.</p></blockquote><blockquote><p>学术论文写作可能很困难。为了获得更好的结果，你必须研究新的想法并将它们转化为正式的写作。</p><p>更不用说在事实核查、准确引用资料以及维持文章客观性方面所面临的压力了。</p><p>不过，好消息是：ChatGPT 能成为你学术写作的得力助手。</p><p>本文将介绍 15 个 ChatGPT 提示，助你一臂之力。</p><p>借助这些提示，ChatGPT 不仅能帮你锁定出色的论文议题、构建论证结构，还能为你的文字增添独特风格。</p><p>它同样能助你梳理思绪，将繁杂信息整合成条理清晰的论文。</p><p>继续阅读，探索 ChatGPT 如何在撰写学术论文过程中助你一臂之力。</p></blockquote><div class="note note-light">            <p><strong>可以通过鼠标和键盘控制</strong> 学术论文写作可能很困难。为了获得更好的结果，你必须研究新的想法并将它们转化为正式的写作。</p><p>更不用说在事实核查、准确引用资料以及维持文章客观性方面所面临的压力了。</p><p>不过，好消息是：ChatGPT 能成为你学术写作的得力助手。</p><p>本文将介绍 15 个 ChatGPT 提示，助你一臂之力。</p><p>借助这些提示，ChatGPT 不仅能帮你锁定出色的论文议题、构建论证结构，还能为你的文字增添独特风格。</p><p>它同样能助你梳理思绪，将繁杂信息整合成条理清晰的论文。</p><p>继续阅读，探索 ChatGPT 如何在撰写学术论文过程中助你一臂之力。</p>          </div><h2 id="the-power-of-chatgpt-prompts-boosting-your-academic-writing"><strong>The Power of ChatGPT Prompts: Boosting Your Academic Writing</strong></h2><p>Staring at a blank page is common for any writer, especially in academia.</p><p>Here's how ChatGPT prompts can be helpful:</p><p><strong>Brainstorming Ideas:</strong> Struggling to develop a central thesis?</p><p>These prompts can outline your topic and research questions.</p><p>ChatGPT can then generate ideas, relevant sources, and even counterarguments to get your creative juices flowing.</p><p><strong>Structuring Your Work:</strong> Feeling lost in the organization of your paper? </p><p>A prompt outlining your desired essay structure can help ChatGPT create a clear and concise framework, complete with transitions and logical flow.</p><p><strong>Overcoming Writer's Block:</strong> Hitting a wall mid-essay?</p><p>A prompt focusing on a specific point or argument can jumpstart your writing and help you bridge the gap between ideas.</p><p><strong>Generating Citations and References:</strong> Referencing can be a time-consuming task.</p><p>A prompt outlining your sources can help ChatGPT format citations in the academic style, saving you valuable time.</p><p><strong>ALSO READ:</strong> <a href="https://www.godofprompt.ai/blog/make-money-with-chatgpt">10 Chatgpt Prompts for making money</a></p><h3 id="chatgpt-prompts-for-academic-writing"><strong>15 ChatGPT Prompts for Academic Writing</strong></h3><h3 id="refine-thesis-statement"><strong>1. Refine thesis statement:</strong></h3><h3 id="chatgpt-ai-prompt"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a thesis advisor with a specialization in academic writing. Your task is to refine and enhance a student's thesis statement for their academic paper. The thesis statement provided by the student is: "[INITIAL THESIS STATEMENT]." Your goal is to critique this initial thesis statement for clarity, specificity, and academic rigor. Provide constructive feedback on how to make the thesis more concise, focused, and argumentative. Suggest ways to incorporate a clear stance, significant research questions, and the potential implications of the research. Ensure the refined thesis statement is well-defined, debatable, and sets a solid foundation for an interesting argument in their academic paper.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042e804dcb23cd6bce0d63_Refine%20thesis%20statement%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Refine thesis statement ChatGPT Prompt</figcaption></figure><p>Refine thesis statement ChatGPT Prompt</p><h3 id="analyze-data-and-findings"><strong>2. Analyze data and findings:</strong></h3><h3 id="chatgpt-ai-prompt-1"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Adopt the role of a data analyst within the context of academic writing. Your task is to analyze the data provided in the section "[DATA SECTION NAME]" of an academic paper. Begin by summarizing the key data points and findings. Identify patterns, correlations, or anomalies within the data. Discuss how these findings support or challenge the paper's thesis statement or major arguments. Evaluate the method used to gather the data for its strengths and weaknesses, considering factors like sample size, data collection methods, and potential biases. Conclude by discussing the implications of the findings for the field of study and suggesting areas for further research. Ensure your analysis is thorough, aim, and adheres to academic standards.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042eca95fcda0c67b6dbe7_Analyze%20data%20and%20findings%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Analyze data and findings ChatGPT Prompt</figcaption></figure><p>Analyze data and findings ChatGPT Prompt</p><h3 id="brainstorm-research-topics"><strong>3. Brainstorm research topics:</strong></h3><h3 id="chatgpt-ai-prompt-2"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>As a research advisor, your task is to brainstorm potential research topics for an academic writing project in "[FIELD OF STUDY]." Begin by identifying current trends, gaps, and emerging questions within this field that could lead to impactful research. Consider interdisciplinary approaches that could enrich the research perspective. Generate a list of at least five interesting research topics, each accompanied by a brief explanation of its significance, potential research questions, and the contribution to the field. Ensure that each topic is workable, original, and has a clear scope for in-depth academic investigation.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042efdb2732c49a2d6b862_Brainstorm%20research%20topics%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Brainstorm research topics ChatGPT Prompt</figcaption></figure><p>Brainstorm research topics ChatGPT Prompt</p><h3 id="develop-research-questions"><strong>4. Develop research questions:</strong></h3><h3 id="chatgpt-ai-prompt-3"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a research consultant tasked with developing research questions for an academic paper on the topic of " [RESEARCH TOPIC]." Start by identifying the major themes and subtopics related to the research topic that are ripe for exploration. Formulate a set of comprehensive research questions that are clear, focused, and conducive to in-depth academic investigation. Each question should aim to address a specific aspect of the research topic, uncovering new insights or contributing to the existing body of knowledge. Ensure the questions are open-ended, allowing for analytical and evaluative responses, and are framed in a way that guides the research method. Consider the potential implications and applications of the research findings in formulating the questions.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042f1b2d3641e390dbed97_Develop%20research%20questions%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Develop research questions ChatGPT Prompt</figcaption></figure><p>Develop research questions ChatGPT Prompt</p><h3 id="proofread-for-clarity-and-conciseness"><strong>5. Proofread for clarity and conciseness:</strong></h3><h3 id="chatgpt-ai-prompt-4"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a proofreader specializing in academic writing. Your task is to review and edit a segment of an academic paper titled "[PAPER TITLE]." Focus on ensuring clarity, conciseness, and coherence in the writing. Identify any sentences or phrases that are ambiguous, overly complex, or unnecessarily verbose, and suggest precise and succinct alternatives. Pay attention to the logical flow of ideas, ensuring that each sentence contributes effectively to the argument or narrative. Check for consistency in terminology, style, and voice throughout the document. Highlight any jargon or technical terms that may need clarification for the paper's intended audience. Conclude your proofreading by verifying that the segment aligns with academic standards and enhances the overall readability and impact of the paper.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042f3ab698a7f104a6d996_Proofread%20for%20clarity%20and%20conciseness%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Proofread for clarity and conciseness ChatGPT Prompt</figcaption></figure><p>Proofread for clarity and conciseness ChatGPT Prompt</p><h3 id="assist-with-literature-review"><strong>6. Assist with literature review:</strong></h3><h3 id="chatgpt-ai-prompt-5"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Adopt the role of a researcher conducting a comprehensive literature review for an academic paper on [RESEARCH TOPIC]. Your task involves identifying, analyzing, and synthesizing key findings, theories, and methodologies from a diverse range of sources related to the topic. Begin by formulating a simple research question or thesis statement that guides the scope of your review. Search for relevant academic journals, conference papers, books, and credible online resources. Evaluate each source for its credibility, relevance, and contribution to the field. Summarize the core arguments, evidence, and conclusions from each source, noting any patterns, discrepancies, or gaps in the literature. Critically assess the methodologies used in the studies, their limitations, and the implications of their findings. Organize the literature review thematically or chronologically, ensuring a logical flow that builds a coherent narrative around your research topic. Conclude by highlighting how your research will address the identified gaps or contribute new insights to the field. Ensure to adhere to the specific citation style and academic writing standards required by your institution.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042f54cb684564de5cedb0_Assist%20with%20literature%20review%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Assist with literature review ChatGPT Prompt</figcaption></figure><p>Assist with literature review ChatGPT Prompt</p><h3 id="formulate-hypothesis"><strong>7. Formulate hypothesis:</strong></h3><h3 id="chatgpt-ai-prompt-6"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Adopt the role of an academic researcher in [RESEARCH AREA]. Your task is to plan a clear and concise hypothesis that addresses a specific research question within this area. The hypothesis should be based on existing literature, theories, or frameworks relevant to [RESEARCH AREA]. It must be testable, either through empirical research methods or qualitative analysis, and should contribute to the existing body of knowledge by addressing a gap or challenging an existing assumption. Ensure your hypothesis is specific, measurable, achievable, relevant, and time-bound (SMART). Provide a brief explanation of the rationale behind your hypothesis, linking it to key concepts, theories, or previous studies in the field.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042f71888fbe5dc3ae44f3_Formulate%20hypothesis%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Formulate hypothesis ChatGPT Prompt</figcaption></figure><p>Formulate hypothesis ChatGPT Prompt</p><h3 id="develop-a-strong-introduction"><strong>8. Develop a strong introduction:</strong></h3><h3 id="chatgpt-ai-prompt-7"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of an academic researcher tasked with writing the introduction to a scholarly paper. Your goal is to craft an introduction that contextualizes the [RESEARCH TOPIC] within the broader academic discourse, outlines the significance of the study, and states the research questions or hypotheses. Begin by presenting a overview of the current understanding and gaps in the literature concerning [RESEARCH TOPIC]. Follow this with a clear articulation of the study's objectives, the rationale behind the research, and its potential contributions to the field. Ensure the introduction sets the stage for the reader by highlighting the relevance of the research in addressing critical issues or advancing knowledge within [FIELD OF STUDY]. Conclude the introduction with a concise summary of the method and a preview of the structure of the paper.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042f9e68944556da77a53d_Develop%20a%20strong%20introduction%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Develop a strong introduction ChatGPT Prompt</figcaption></figure><p>Develop a strong introduction ChatGPT Prompt</p><h3 id="create-outline"><strong>9. Create outline:</strong></h3><h3 id="chatgpt-ai-prompt-8"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>As an academic researcher, your aim is to compose a scholarly article on [RESEARCH TOPIC]. Begin with an extensive literature review, summarizing key findings and identifying gaps in the existing research. Formulate a clear research question or hypothesis based on these gaps. Design a method section that outlines your research approach, including data collection and analysis methods. Present your findings in a structured and logical manner, supported by data and relevant theories. Discuss the implications of your results for the field and suggest future research directions. Ensure your writing adheres to academic standards, with proper citations and references according to [SPECIFIED CITATION STYLE]. Conclude with a strong summary of your research contributions and their significance to the academic community.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042fbd2fba5f6a4fb44707_Create%20outline%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Create outline ChatGPT Prompt</figcaption></figure><p>Create outline ChatGPT Prompt</p><h3 id="write-sections-of-the-paper"><strong>10. Write sections of the paper:</strong></h3><h3 id="chatgpt-ai-prompt-9"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of an academic researcher in [YOUR FIELD]. Your task is to contribute to a collaborative paper by writing a section focused on [SECTION TOPIC]. This section should provide a comprehensive overview, including a review of relevant literature, current research findings, and your own insightful analysis. Ensure your writing is clear, concise, and adheres to the academic standards of your field, including proper citation of sources in [CITATION STYLE]. Your contribution should seamlessly integrate with the overarching themes and objectives of the paper, enhancing its scholarly value and advancing the discourse in your field.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042fdda4f4e03740152ff1_Write%20sections%20of%20the%20paper%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Write sections of the paper ChatGPT Prompt</figcaption></figure><p>Write sections of the paper ChatGPT Prompt</p><h3 id="format-headings-and-subheadings-effectively"><strong>11. Format headings and subheadings effectively:</strong></h3><h3 id="chatgpt-ai-prompt-10"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of an academic editor tasked with formatting the headings and subheadings of a research paper in [YOUR FIELD]. Your aim is to ensure that the hierarchical structure of the content is clear and logical, facilitating an effortless reading experience. Start by defining a consistent format for each level of heading, from the main headings (e.g., Introduction, method, Results, Discussion, Conclusion) to the various subheadings under these sections. Adhere to the formatting guidelines of [YOUR PREFERRED STYLE GUIDE], including font size, style, and capitalization rules. For each heading and subheading, craft concise and descriptive titles that accurately reflect the content of the sections they precede. Ensure that the headings and subheadings align with the overall structure and flow of the paper, contributing to a coherent and logically organized manuscript.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66042ff6731713773a1e8eaa_Format%20headings%20and%20subheadings%20effectively%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Format headings and subheadings effectively ChatGPT Prompt</figcaption></figure><p>Format headings and subheadings effectively ChatGPT Prompt</p><h3 id="strengthen-transitions-between-ideas"><strong>12. Strengthen transitions between ideas:</strong></h3><h3 id="chatgpt-ai-prompt-11"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a linguistic expert focusing on enhancing the coherence and flow of an academic paper in [YOUR FIELD]. Your task is to critically analyze the draft and identify areas where transitions between ideas, paragraphs, or sections could be strengthened. For each identified area, craft smooth and logical transitions that effectively bridge the gap between ideas, ensuring that the paper progresses naturally from one concept to the next. Employ a variety of transition techniques, such as signaling phrases (e.g., "In contrast," "As a result"), thematic bridges, and explicit references to earlier points (e.g., "Building upon the previously discussed concept of [CONCEPT],..."). Ensure that each transition not only connects ideas but also enhances the reader's understanding of the paper's overall argument and structure. Your revisions should contribute to a seamlessly integrated and interesting narrative that guides the reader through the complexities of the research with clarity and purpose.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/66043011478f723a2fe113de_Strengthen%20transitions%20between%20ideas%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Strengthen transitions between ideas ChatGPT Prompt</figcaption></figure><p>Strengthen transitions between ideas ChatGPT Prompt</p><h3 id="correct-grammar-and-syntax"><strong>13. Correct grammar and syntax:</strong></h3><h3 id="chatgpt-ai-prompt-12"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a meticulous proofreader with a strong background in [YOUR FIELD]. Your task is to scrutinize an academic manuscript, focusing specifically on correcting grammatical errors and refining syntax to meet the highest standards of academic writing. Pay close attention to subject-verb agreement, tense consistency, and the proper use of academic tone and vocabulary. Rectify any instances of passive voice where an active voice would be more direct and impactful. Examine complex sentences to ensure clarity and coherence, breaking down overly complicated structures if necessary. Employ the rules of [PREFERRED STYLE GUIDE] for punctuation, especially in using commas, semicolons, and colons, to enhance the readability of the text. Your goal is to produce a polished, error-free document that communicates ideas clearly, concisely, and effectively, without detracting from the scholarly content and contributions of the work.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/6604303e9afdfe1b783882e2_Correct%20grammar%20and%20syntax%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Correct grammar and syntax ChatGPT Prompt</figcaption></figure><p>Correct grammar and syntax ChatGPT Prompt</p><h3 id="generate-citations"><strong>14. Generate citations:</strong></h3><h3 id="chatgpt-ai-prompt-13"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a detail-oriented citation specialist within the academic field of [YOUR FIELD]. Your task is to compile and format citations for a range of sources cited within an academic paper. Begin by collecting all necessary information for each source, including authors' names, titles of works, publication dates, page numbers, and publisher details for books, or journal names, volume, and issue numbers for articles. Apply the citation style specified for the paper, such as APA, MLA, Chicago, or Harvard, ensuring strict adherence to the guidelines for in-text citations and the reference list or bibliography. For in-text citations, craft them to smoothly integrate within the text, contributing to the paper's academic integrity and flow. In the reference list, meticulously organize and format each citation, ensuring consistency and accuracy, so that readers can easily locate the original sources. Your efforts will uphold the scholarly credibility of the paper and respect intellectual property rights.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/660430634da4544b2d08cddb_Generate%20citations%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Generate citations ChatGPT Prompt</figcaption></figure><p>Generate citations ChatGPT Prompt</p><h3 id="develop-argument"><strong>15. Develop argument:</strong></h3><h3 id="chatgpt-ai-prompt-14"><strong>ChatGPT AI Prompt:</strong></h3><blockquote><p>Assume the role of a critical thinker and scholar in [YOUR FIELD]. Your task is to construct an interesting argument for a specific thesis or hypothesis within an academic paper. Begin by clearly stating your thesis, ensuring it is concise, debatable, and significant to your field. Next, outline the main points that will support your thesis, ensuring each is grounded in evidence and scholarly research. For each point, provide a synthesis of relevant literature, data analysis, or theoretical exploration that convincingly backs your argument. Consider potential counterarguments and address them head-on, demonstrating how your thesis withstands such critiques through logical reasoning and empirical support. Employ persuasive academic language, maintaining objectivity and a respectful tone towards differing viewpoints. Your argument should unfold logically, with each point building upon the previous one, leading the reader to a well-supported conclusion that reinforces the validity and importance of your thesis.</p></blockquote><p><strong>ChatGPT Response:</strong></p><figure><img src="https://assets-global.website-files.com/64808e3805a22fc1ca46ffe9/6604307f74a79b5e04ae8c99_Develop%20argument%20ChatGPT%20Prompt.webp" alt="" /><figcaption>Develop argument ChatGPT Prompt</figcaption></figure><p>Develop argument ChatGPT Prompt</p><h3 id="important-considerations"><strong>Important Considerations</strong></h3><p>Here are some key points to remember when incorporating <a href="https://www.godofprompt.ai/blog/best-chatgpt-prompts-for-entrepreneurs">ChatGPT prompts</a> and its generated content into your academic writing:</p><p><strong>Accuracy and Fact-Checking:</strong> ChatGPT may not always provide perfectly accurate information, especially for factual topics.</p><p>Always double-check the information generated against credible sources. </p><p><strong>Bias and Fairness:</strong> The training data used for ChatGPT may contain biases.</p><p>Be mindful of potential biases in the output, particularly when dealing with sensitive topics, and strive for a balanced perspective in your writing.</p><p><strong>Citation and Originality:</strong> ChatGPT-generated content is not inherently plagiarism, but it's important to cite any content you directly use from the prompts or output.</p><p>You should paraphrase and integrate the information into your own writing style. </p><p><strong>Academic Integrity:</strong> Don't rely solely on ChatGPT to complete your assignments.</p><p>Use it as a tool to brainstorm, develop ideas, and refine your writing, but ensure you understand the core concepts and arguments presented in your work.</p><p><strong>Critical Thinking and Editing:</strong> The prompts and output are starting points, not final products. </p><p>Critically evaluate the generated content, assess its relevance to your topic, and edit for clarity, coherence, and proper academic tone.</p><p>By keeping these guidelines in mind, you can use ChatGPT prompts and their responses to improve your academic writing in a way that maintains uniqueness across your content.</p><p><strong>ALSO READ:</strong> <a href="https://www.godofprompt.ai/blog/how-to-rewrite-content-with-chatgpt"><strong>How to Rewrite Content with ChatGPT</strong></a></p><h3 id="conclusion-15-chatgpt-prompts-for-academic-writing"><strong>Conclusion: 15 ChatGPT Prompts for Academic Writing</strong></h3><p>In summary, using ChatGPT can significantly improve your academic writing by offering help with research and ideas.</p><p>It's important, though, to use it carefully to make sure your work remains honest and unique.</p><p>As AI in education keeps growing, we should use these tools wisely, making sure they help rather than take over our work.</p><p>This way, ChatGPT can make academic writing better and encourage more creative and cooperative learning.</p><p>If you love this content, check out this <a href="https://www.godofprompt.ai/blog/20-chatgpt-prompts-for-digital-products">chatgpt prompts we use to sell digital maketing products.</a></p>]]></content>
    
    
    <summary type="html">15个适用于学术写作的 ChatGPT Prompts（15 ChatGPT Prompts for Academic Writing</summary>
    
    
    
    <category term="AI" scheme="https://withesse.co/categories/AI/"/>
    
    
    <category term="ChatGPT" scheme="https://withesse.co/tags/ChatGPT/"/>
    
    <category term="Prompts" scheme="https://withesse.co/tags/Prompts/"/>
    
  </entry>
  
  <entry>
    <title>ChatGPT Prompts</title>
    <link href="https://withesse.co/post/llm-prompts/"/>
    <id>https://withesse.co/post/llm-prompts/</id>
    <published>2024-04-01T11:00:00.000Z</published>
    <updated>2024-04-01T11:00:00.000Z</updated>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <summary type="html">ChatGPT Prompts for Develop</summary>
    
    
    
    <category term="AI" scheme="https://withesse.co/categories/AI/"/>
    
    
    <category term="ChatGPT" scheme="https://withesse.co/tags/ChatGPT/"/>
    
    <category term="Prompts" scheme="https://withesse.co/tags/Prompts/"/>
    
  </entry>
  
  <entry>
    <title>DDD 概念参考</title>
    <link href="https://withesse.co/post/ddd-concept-reference/"/>
    <id>https://withesse.co/post/ddd-concept-reference/</id>
    <published>2021-07-17T09:37:18.000Z</published>
    <updated>2021-07-17T09:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>文章转载自<a href="https://domain-driven-design.org/">https://domain-driven-design.org/</a> 版权归原作者所有。</p>          </div><figure><img src="/assets/image/ddd/concept-map-hd.png" alt="" /><figcaption>DDD 基本概念图</figcaption></figure><h1 id="通用类概念">通用类概念</h1><h2 id="领域驱动设计ddd">领域驱动设计（DDD）</h2><p><strong>DDD 是 Domain-Driven Design 的缩写，是 Eric Evans 于 2004 年提出的一种软件设计方法和理念。</strong></p><p>其主要的思想是，利用确定的业务模型来指导业务与应用的设计和实现。主张开发人员与业务人员持续地沟通和模型的持续迭代式演化，以保证业务模型与代码实现的一致性，从而实现有效管理业务复杂度，优化软件设计的目的。</p><h2 id="模型model">模型（Model）</h2><p><strong>通常，模型是对对象、人或系统的信息表示。它通过较为简单的信息结构来代表我们需要理解的复杂事物或系统。</strong></p><p>地图、乐高、算筹都是模型，模型可以简化复杂事务的认知。我们天生就有用简单的东西代表另外一个东西的能力，比如幼儿园数数用的竹签，学习物理时的刚体、真空中的球形鸡，都是模型。通俗来说模型就是经验的抽象集合，平时听到的谚语、公式、定理，本质上都是一种模型。</p><h2 id="建模modeling">建模（Modeling）</h2><p><strong>建模是构建模型的过程。</strong></p><p>在软件设计过程中，通过分析业务，将业务需求使用合适的模型表示出来，是建模的任务。模型可以作为业务分析的产出，并作为软件设计的重要理论基础。 比如在分析一个电商应用的业务时，抽象出订单、商品等概念，进一步定义出模型，并用合适的图例表达，往往是 UML 来表达。</p><h2 id="模型驱动设计model-driven-design">模型驱动设计（Model-Driven Design）</h2><p><strong>面向模型的分析设计方法，优先通过识别模型来简化业务设计。</strong></p><p>在设计过程中，以模型为中心，始终维护模型，并基于此指导软件设计。</p><h2 id="软件设计the-software-design">软件设计（The Software Design）</h2><p><strong>软件设计软件需求出发，对软件系统的整体结构、模块做出划分和规划，以便于具体代码的顺利编写。</strong></p><p>由于软件需求具有非结构化、准确的语义，软件设计往往通过经验完成，无法通过某种特定的推理路线严格推导实现。</p><h2 id="战略设计strategic-design">战略设计（Strategic Design）</h2><p><strong>战略设计也称为战略建模，是指对业务进行高层次的抽象和归类。主要手段包括理清上下文和进行子域的划分。</strong></p><p>战略设计关注模型的分离，其解决的问题是大的模型如何划分为小模型以及相互之间如何关联。战略设计的产出可以用于指导团队协作，使得规模巨大的软件可以被合理拆分。</p><p>战略设计的产出通常为上下文图，以及模块或微服务划分。</p><h2 id="战术设计tactical-design">战术设计（Tactical design）</h2><p><strong>战术设计也称为战术建模，是指对特定上下文下的模型进行详细设计。</strong></p><p>战术设计的对象包括聚合、实体和值对象，其目标是用明确它们是什么以及相互之间有何关系。战术设计的产出可以是用 UML 表达的类图，需要细化到具体的属性，同时确保在代码级别可实现。</p><h2 id="软件software">软件（Software）</h2><p><strong>DDD 讨论下的软件是指，用于解决具体业务问题的计算机程序，既可以是单体也可以是分布式系统。</strong></p><p>软件设计是 DDD 的最终目的，使用 DDD 的各种工具可以指导软件设计，最终构建出健壮、容易维护的软件。</p><h2 id="原则principle">原则（Principle）</h2><p><strong>为了更好的践行 DDD，需要遵守几个原则: 通用语言、聚焦核心域、协作共创和持续建模。</strong></p><p>这些原则是为了更好地服务业务，从业务驱动模型设计。</p><h2 id="通用语言ubiquitous">通用语言（Ubiquitous）</h2><p><strong>通用语言（Ubiquitous language）是指在软件设计中，业务人员和开发人员需要使用无歧义的统一语言来对话。</strong></p><p>这些语言包括对概念的统一理解和定义，以及业务人员参与到软件建模中，否则业务的变化会造成软件巨大的变化。</p><h2 id="聚焦核心域focus">聚焦核心域（Focus）</h2><p><strong>核心域就是最关键的业务逻辑，聚焦核心域决定了软件的定位和投资重心。</strong></p><h2 id="协作共创collaboration">协作共创（Collaboration）</h2><p><strong>协作共创是指领域专家和业务专家共同建模。</strong></p><h2 id="持续建模continuous">持续建模（Continuous）</h2><p><strong>持续建模是指模型需要随业务变化而被及时更新。</strong></p><h2 id="上下文context">上下文（Context）</h2><p><strong>上下文是语言学科的概念，指不同语境下的概念虽然相同的用词，可能具有不同的含义。</strong></p><p>在软件设计中，因为自然语言的原因，相同的用词导致实际是不同概念，会对建模和软件设计带来误导。同时，不同的上下文也是识别模型边界的手段。</p><h1 id="领域分析类概念">领域分析类概念</h1><h2 id="问题空间problem-space">问题空间（Problem Space）</h2><p><strong>待解决的业务问题的集合。</strong></p><p>在 DDD 实践中，我们应该明确区分问题空间和解空间，避免混为一谈。</p><h2 id="领域domain">领域（Domain）</h2><p><strong>领域（Domain）是业务相关知识的集合。</strong></p><p>通俗来说，领域就是业务知识。业务有一些内在规则，存在专业性，比如财务、CRM、OA、电商等不同领域的业务规则不同。计算机只是业务规则的自动化。</p><h2 id="子域sub-domain">子域（Sub Domain）</h2><p><strong>一个子域是领域的一部分。</strong></p><p>为了降低业务理解复杂度，DDD 实践中通常将领域划分为子域，通过分而治之的方法分析问题。</p><h2 id="核心域core-domain">核心域（Core Domain）</h2><p><strong>核心域是指领域中最核心的部分，通常对应企业的核心业务</strong></p><p>核心域需要我们投入最大精力，进行充分的分析。因为它是一个企业能运转的基础。</p><h2 id="支撑域support-domain">支撑域（Support Domain）</h2><p><strong>支撑域是一种特殊的子域，是指为了实现核心业务而不得不开发的业务所对应的相关知识的集合。</strong></p><p>例如，活动平台业务属于电商的支撑域，因为该业务对于电商企业并不是必需的，其存在的意义仅在于放大利润。</p><h2 id="通用域general-domain">通用域（General Domain）</h2><p><strong>通用域是另一种特殊的子域，对应的是业界已经有成熟方案的业务。</strong></p><p>通用域可以看做一种特殊的支撑域，可以使用标准部件来实现，短信通知、邮件等领域问题。</p><h1 id="建模类概念">建模类概念</h1><h2 id="解空间solution-space">解空间（Solution Space）</h2><p><strong>解空间是一个数学概念。是指满足问题的所有约束前提下，所有可行解的集合。在 DDD 的上下文中，指的是所有可能的解决方案的集合。</strong></p><p>解空间是相对问题空间存在的，认识到解空间存在的好处是解空间可以通过一些方法从问题空间导出，而不是通过猜测得出的。</p><h2 id="领域模型model">领域模型（Model）</h2><p><strong>领域模型（Model）是业务概念在程序中的一种表达方式。</strong></p><p>领域模型可以用来设计和理解整个软件结构。面向对象设计中的类概念是领域模型的一种表达方式。与此类似，UML的建模方法也可以应用在对领域模型的表达上。在 DDD 实践中，领域模型应当尽量简洁，能反应业务概念即可。</p><h2 id="限界上下文-bounded-context">限界上下文（ Bounded context）</h2><p><strong>限界上下文是有明确边界的上下文。在 DDD 实践中领域模型会被限定在限界上下文当中。</strong></p><p>限界上下文强调概念的一致性。虽然传统的方法学已经在追求概念的一致性，但是忽略了系统的庞大性，不论系统多庞大，在系统任何位置同一概念通用。DDD 不追求全局的一致性，而是将系统拆成多块，在相同的上下文中实现概念一致性。</p><p>识别上下文可以从概念的二义性着手，比如商品的概念在物流、交易、支付含义完全不一样，但具有不同内涵和外延，实际上他们处在不同上下文。</p><p>界限上下文可以用于微服务划分、避免模型的不正确复用带来的问题。</p><h2 id="实体entity">实体（Entity）</h2><p><strong>实体（Entity）是在相同限界上下文中具有唯一标识的领域模型，可变，通过标识判断同一性。</strong></p><h2 id="值对象value-object">值对象（Value Object）</h2><p><strong>值对象 （Value Ojbect）是一种特殊的领域模型，不可变，通过值判断同一性。</strong></p><p>实体可以使用 ID 标识，但是值对象是用属性标识，任何属性的变化都视为新的值对象。比如一个银行账户，可以由 ID 唯一标识，币种和余额可以被修改但是还是同一个账户；交易单中的金额由币种和数值组成，无论修改哪一个属性，金额都不再是原来的金额。</p><h2 id="聚合aggregate">聚合（Aggregate）</h2><p><strong>聚合（Aggregate）是一组生命周期强一致，修改规则强关联的实体和值对象的集合，表达统一的业务意义。</strong></p><p>聚合的意义在于让业务统一、一致，在面向对象中有非常重要价值。比如，订单中有多个订单项，订单的总价是根据订单项目计算而来的。如果没有经验的开发者直接对订单项的做出修改，而不是由订单统一处理业务逻辑，会造成业务的一致性问题。</p><p>聚合需要在相同的上下文中，不能跨上下文。</p><h2 id="聚合根-aggregate-root">聚合根（ Aggregate Root）</h2><p><strong>聚合根（ Aggregate Root）是聚合中最核心的实体，其他的实体和值对象都从属于这个实体。</strong></p><p>要管理聚合必须使用一个聚合根，然后使用聚合根来实现发现、持久化聚合的作用，完成统一的业务意义。一个聚合中有且只有一个聚合根，聚合也可以只有一个单独的实体。</p><h1 id="软件设计类概念">软件设计类概念</h1><h2 id="模块module">模块（Module）</h2><p><strong>模块（Module）一组类或者对象组成的集合。</strong></p><p>在 DDD 实践中推荐使用限界上下文和聚合来指导模块划分。同时，如果不是特别复杂的业务逻辑也可以不遵循该模式。</p><h2 id="仓储repository">仓储（Repository）</h2><p><strong>仓储（Repository）是以持久化领域模型为职责的类。</strong></p><p>仓储的目的是屏蔽业务逻辑和持久化基础设施的差异。例如，对于同样的持久化业务需求，在采用关系型数据库和非关系型数据库作为存储基础设施时的实现细节是有所不同的。</p><p>软件的设计往往是围绕着对数据的修改完成的。经验不多的开发者往往会认为，软件的开发过程就是对数据库的增删改查。但实际上基于该认知的软件设计让软件难以维护。</p><p>对于采用关系数据库作为存储基础设施的项目，仓库层可以被 ORM 实现。若不使用 ORM，则需自己实现仓库。</p><h2 id="服务service">服务（Service）</h2><p><strong>服务（Service）是领域模型的操作者，负责领域内的业务规则的实现。</strong></p><p>领域模型用于承载数据和系统状态，服务承载业务逻辑的实践。</p><p>在实践中如果使用主、客体的思维来进行设计，则服务为主体，领域模型为客体。使用拟人化的方式来对服务进行命名，可以让开发者更容易理解。比如，一个维护客户数据的 CRM 应用中，客户数据被抽象为模型： Client，对应的服务可以设计为：ClientManager。</p><h2 id="工厂factory">工厂（Factory）</h2><p><strong>工厂（Factory）是以构建领域模型（实体或值对象）为职责的类或方法。</strong></p><p>工厂可以利用不同的业务参数构建不同的领域模型。对于简单的业务逻辑实现可以不使用工厂。工厂的实现不一定是类的形式，也可以是具备工厂功能的方法。</p><p>在面向对象程序设计中，工厂是一种设计模式。在广义的工厂模式中，工厂可以根据不同的规则的业务需求构造不同的对象。例如在 Redis 连接客户端的实现中，可以使用 Redis 单机、哨兵、集群等不同的方式来构建 Redis 连接客户端。</p><h2 id="策略strategy">策略（Strategy）</h2><p><strong>策略（Strategy）是业务规则的实现方式。</strong></p><p>例如通知业务，可以使用不同的渠道来实现，不同渠道的实现逻辑可以认为是不同的策略。 在面向对象程序设计中，策略模式也是一种设计模式，是多态的一种实现模式。</p><p>策略通常会搭配着接口来设计。如果说接口是一种契约，那策略就是契约的履约方式。</p><h2 id="规格specification">规格（Specification）</h2><p><strong>规格（Specification） 是一些特殊的业务规则。通常表现为用于校验（e.g. 数据格式，业务逻辑）、查询和搜索条件。</strong></p><p>在实践中，规格既可以被设计为灵活的查询或校验条件，也可以被抽象出来以便复用。</p><p>例如，在 JPA、MongoDB、ElastiSearch和一些具有查询能力的 ORM 都大量使用这种设计方式，同样的在应用程序中我们也可以参考这种设计模式，把业务的规则提取出来。</p><h2 id="分层架构逻辑">分层架构（逻辑）</h2><p><strong>分层架构是指在软件设计过程中按照既定的原则将不同的功能实现拆分到不同的层级进行实现的一种设计方式。每个层级有独立的职责，多个层次协同以提供完整功能。按照 DDD 的分层模型，通常可以划分为:接入层、应用层、领域层、基础设施层</strong></p><p>分层架构在具体的软件中可以表现为不同的形式。例如，在分布式系统中，不同层级的软件实现，可以表现为独立部署的服务。而在单体系统中，分层可以用不同的模块或包来实现。</p><p>分层架构的设计理念与计算机网络的层级结构类似，上层依赖下层的实现，而下层实现无需关心上层实现。例如，HTTP 协议构建在 TCP 协议之上，TCP 协议只负责提供传输层的能力，而不需要知道具体的应用层协议。</p><p>分层架构中层级的数量需要依照系统复杂度来定，并不需要死板地按照 DDD 推荐的四层来进行设计。在简单的系统中，可以通过减少分层来避免样板代码，减少冗余。例如，在 web 系统中有时候只有一种接入方式，接入层和应用层能力高度重叠，可以考虑直接使用应用层代替接入层。</p><p>软件框架的使用，通常会引入新的层级，从而影响系统整体的分层架构。例如，ORM 框架本身就提供了对 Repository 的一层抽象。</p><h2 id="接入层interface">接入层（Interface）</h2><p><strong>接入层负责的是系统的输入和输出。</strong></p><p>接入层只关心沟通协议，不关心业务相关的数据校验。 接入层的实现是与业务应用强相关的，不同的业务应用有不同的实现方式。例如，对于普通的 Web 应用，基于 HTTP 协议的 API 是一种接入层实现方式；对于IoT传感器的数据上传业务，接入层的实现可能需要基于 websocket 或 MQTT 协议。</p><p>接入层的特点：</p><ul><li>接入层对应用数据透明，只关心数据格式而不关心数据的内容</li><li>在大部分单体系统中接入层通常被框架实现。例如，在 Spring Boot 框架中，HTTP 协议的 API 设计不需要关注 HTTP 协议本身。</li><li>在分布式系统中接入层通常被网关实现。</li></ul><h2 id="应用层application">应用层（Application）</h2><p><strong>应用层，组织业务场景，编排业务，隔离场景对领域层的差异。</strong></p><p>应用层遵循面向对象核心思想中的 “关注点分离” 理念。应用层的关注点在于业务场景的处理。例如，对于一个服务多种类型用户的应用，to C 的网页界面和后台管理界面对应的是不同的业务场景。对于新用户注册这个业务来说，通过 to C 的网页注册和通过后台管理界面进行后台注册是不同的业务场景。然而，"用户注册"在系统层面的基本逻辑是一样的。所以，"用户注册"的基本业务逻辑可以交由领域层来实现。而两种不同渠道进行用户注册所需要进行的身份验证等逻辑，可以设计在应用层进行实现。这样便能达到关注点分离，复用核心业务逻辑的目的。</p><p>应用层的特点：</p><ul><li>关心处理完一个完整的业务</li><li>该层只负责业务编排，对象转换，而具体的业务逻辑由领域层实现</li><li>虽不关心请求从何处来，但关心谁来、做什么、有没有权限做</li><li>利用不同的领域服务来解决问题</li><li>对最终一致性有要求的业务和事务处理需要放到应用层来处理</li><li>功能权限放到这层</li></ul><h2 id="领域层domain">领域层（Domain）</h2><p><strong>领域层，实现具体的业务逻辑、规则，为应用层提供无差别的服务能力。</strong></p><p>实际处理业务的地方，领域层需要对应用层提供无差别的服务和能力。例如，对于用户注册的场景，用户既可以通过邮箱自己注册，也可以由管理员在后台进行添加。用户注册的核心逻辑可以由领域层完成，但是对于不同渠道进行用户注册的参数校验和权限验证等逻辑则由应用层实现。</p><p>领域层的特点：</p><ul><li>不关心场景，关心模型完整性和业务规则</li><li>不关心谁来，不关心场景完整的业务，关心当前上下文的业务完整</li><li>强一致性事务放到这层，聚合的事务是 "理所当然的"</li><li>对应到分布式系统中的 domain service、后台等概念</li><li>领域层做业务规则验证</li><li>数据权限放到这层（比如只允许删除自己创建的商品），因为数据权限涉及业务规则</li><li>根据业务情况，参考反范式理论，跨上下文使用值对象做必要的数据冗余</li></ul><h2 id="基础设施层infrastructure">基础设施层（Infrastructure）</h2><p><strong>基础设施层，提供具体的技术实现，比如存储，基础设施对业务保持透明。</strong></p><p>对于基础设施层来说，基础设施层并不是指 MySQL、Redis 等外部组件，而是外部组件的适配器，Hibernate、Mybatis、Redis Template 等，因此在 DDD 中适配器模式被多次提到，基础设施层往往不能单独存在，还是要依附于领域层。技术设施层的适配器还包括了外部系统的适配，互联网产品系统的外部系统非常多，常见的有活体监测、风控系统、税务发票等。</p><p>技术设施层的特点：</p><ul><li>关心存储、通知、第三方系统等外部设施（防腐层隔离）</li><li>基础设施的权限由配置到应用的凭证控制，例如数据库、对象存储的凭证，技术设施层不涉及用户的权限</li></ul><h2 id="部署架构物理">部署架构（物理）</h2><p><strong>部署架构是指具体的架构实现</strong></p><p>主要是在分布式系统、单体系统，甚至在客户端软件中体现。</p><p>把逻辑架构和部署架构区分开可以很好的理解软件设计上和部署上的不同，对于应用构架来说，逻辑上的设计不一定对应部署结构。</p><p>这样就很好理解 DDD 在不同场合中的使用方式，避免生搬硬套。当 DDD 的分层结构在单体应用中使用时，每层可能使用包、模块来表达，在微服务中使用时候，每层可能由不同角色的微服务来完成。</p><h2 id="微服务micro-service">微服务（Micro Service）</h2><p><strong>微服务是一种低耦合的分布式应用系统。</strong></p><p>维基百科的定义是：一种软件开发技术 - 面向服务的体系结构（SOA）架构样式的一种变体，将应用程序构造为一组松散耦合的服务。这个定义没有问题，但是忽略了一个重要的信息，微服务是一种分布式架构，微服务必须面对分布式系统的各种问题。</p><p>分布式系统是通过计算机网络连接、协同工作的 IT 系统，因此在使用 DDD 时候，需要为这种系统做适配，而不是简单的做出切分。</p><h2 id="单体monomer">单体（Monomer）</h2><p><strong>单体是主要业务实现和部署在单一服务器上的应用。</strong></p><p>单体系统是相对于微服务来说的，其特点是主要的实现在单一的服务器中。</p><h2 id="分布式应用系统distributed">分布式应用系统（Distributed）</h2><p><strong>分布式应用系统是建立在计算机网络之上的应用软件系统，不同单元通过计算机网络集成。</strong></p><h1 id="事件风暴类概念">事件风暴类概念</h1><h2 id="事件风暴event-storming">事件风暴（Event Storming）</h2><p><strong>事件风暴是一种以工作坊的形式，使用 DDD 建模的方式。</strong></p><p>事件风暴的发明人是 Alberto Brandolini ，它来源于 Gamestorming，通过工作坊的方式将领域专家和技术专家拉到一起，进行建模。</p><p>事件风暴是一种捕获行为需求的方法，类似传统软件的开发用例分析。所有人员（领域专家和技术专家） 对业务行为进行一次发散，并最终收敛达到业务的统一。</p><h2 id="领域事件domain-event">领域事件（Domain Event）</h2><p><strong>事件是系统状态发生的某种客观现象，领域事件是和领域有关的事件。</strong></p><p>领域事件（Domain Event），是在业务上真实发生的客观事实，这些事实对系统会产生关键影响，是观察业务系统变化的关键点。领域事件一般是领域专家关心的。</p><p>事件的评价方式是系统状态是否发生变化。系统状态变化意味着领域模型被业务规则操作，这是观察系统业务的好方法。</p><p>识别领域事件的线索有：</p><ol type="1"><li>是否产生了某种数据</li><li>系统状态是否发生变化，无论这种状态存放到数据库还是内存</li><li>是否对外发送了某些消息</li></ol><h2 id="业务规则policy">业务规则（Policy）</h2><p><strong>业务规则是指对业务逻辑的定义和约束。</strong></p><p>不同的业务规则往往意味着不同的领域事件被触发，未来在技术实现时可能是一些分支条件，对应 DDD 实现中可能通过领域服务、规格、策略等方式实现。</p><p>业务规则的识别是为了将数据和算法分开。</p><h2 id="命令command">命令（Command）</h2><p><strong>命令是执行者发起的操作，构成要件是执行者和行为。</strong></p><p>命令可以类比于 UML 分析中的业务用例，是某个场景中领域事件的触发动作。</p><h2 id="执行者actor">执行者（Actor）</h2><p><strong>执行者是指使用系统的主体，是导致系统状态变化的触发源。</strong></p><p>执行者有点像 UML 的涉众，不过区别是执行者不仅是用户，还包括外部系统和本系统。 在事件风暴中，执行者可以是：用户、外部系统、本系统、定时器。</p><h2 id="用户user">用户（User）</h2><p><strong>用户是执行者的一种，是指使用软件或服务的人。</strong></p><p>用户可以有不同的角色，通常我们会把不同角色的相似行为作为不同的命令来处理，有可能得到同样的事件。比如系统出现了商品已添加的事件，有可能有多个触发的场景： 1. 系统管理员在后台中添加 2. 商户在自己的管理平台中添加 3. 导入任务在特定时间添加</p><p>1 2 是用户的行为，不过是不同的角色。</p><h2 id="外部系统out-system">外部系统（Out System）</h2><p><strong>外部系统是执行者的一种，系统开放 API 的调用发起者。</strong></p><p>有一些系统会提供对外的 API 给外部系统，这时候外部系统也会发出命令让系统产生事件，这里的外部系统特指作为执行者的外部系统。</p><h2 id="本系统system">本系统（System）</h2><p><strong>本系统是执行者的一种，指系统本身。</strong></p><p>事件的触发可以由用户、外部系统、定时器触发，也可以由上一个事件触发，因此这里的触发者（主体）就是系统本身。</p><h2 id="定时器timer">定时器（Timer）</h2><p><strong>定时器是执行者的一种，通常是定时任务。</strong></p><p>定时器可以作为执行者，不过需要区别于本系统这个触发源。定时器可以看待为外部一个时间信号源，类似于计算机中主机中的振荡器。</p><h2 id="参与人participants">参与人（Participants）</h2><p><strong>作为工作坊的参与人员（应区别于执行者）。</strong></p><p>参与人只是一种角色，而非具体的一个人，可以是多个自然人做群体参与，也可以一人分饰不同的角色。</p><p>在开始工作坊之前，参与人需要满足一些条件：</p><ol type="1"><li>参与人需要对解决的问题和产出目标达成共识</li><li>参与人需要 DDD 的基本知识或接受过基本培训</li><li>领域专家、技术专家需要能全程参加</li></ol><h2 id="领域专家domain-expert">领域专家（Domain Expert）</h2><p><strong>领域专家是指熟悉业务规则的人，在工作坊中一般是能敲定业务规则的人。</strong></p><p>在实际的事件风暴工作坊中，领域专家是一个比技术专家更难获得人，一个合格的、能让工作坊进展下去的领域专家需要有几个要求：</p><ol type="1"><li>了解现有业务个情况</li><li>能对具体的业务方向做出结论性的输出</li></ol><p>在做工作坊时，需要分清现状（As-IS）和目标（To-Be）业务，现状业务很多人都能说出来，不过真正的领域专家是能对目标业务做出描述的人。</p><h2 id="技术专家tech-expert">技术专家（Tech Expert）</h2><p><strong>技术专家是指熟悉技术方案和实现方式的人，能给出可行的技术方案和了解基础设计的限制条件。</strong></p><p>技术专家需要能对现有的技术做出描述，而未来的技术选型可能是动态的，能有一定预见性最好。技术专家往往是当前团队中最熟悉架构和代码的人。</p><h2 id="主持人facilitator">主持人（Facilitator）</h2><p><strong>主持人工作坊流程的推动者，以及 DDD 方法论的守护者。</strong></p><p>在一些工作坊中，主持人往往是外部的咨询师，他们有大量的实践经验，需要能对 DDD 的概念、方法有成体系的研究，并能推动工作坊进行。</p>]]></content>
    
    
    <summary type="html">介绍DDD相关概念。</summary>
    
    
    
    <category term="架构设计" scheme="https://withesse.co/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="DDD" scheme="https://withesse.co/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/DDD/"/>
    
    
    <category term="DDD" scheme="https://withesse.co/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>DDD 建模工作坊指南</title>
    <link href="https://withesse.co/post/ddd-design-workshop-guide/"/>
    <id>https://withesse.co/post/ddd-design-workshop-guide/</id>
    <published>2021-07-17T09:37:18.000Z</published>
    <updated>2021-07-17T09:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>文章转载自<a href="https://domain-driven-design.org/">https://domain-driven-design.org/</a> 版权归原作者所有。</p>          </div><h1 id="写在前面">写在前面</h1><p>本指南的目的是通过工作坊的形式，让软件开发团队取得对业务的共识（统一语言），并输出能够落地使用的领域模型。为软件的编写和维护提供指导，帮助软件工程师设计出合理的架构。</p><p>DDD 软件建模工作坊（以下简称 "工作坊"）有多种形式，当前的版本是事件风暴，尚有其他形式的建模方法，例如：</p><ul><li>四色建模法</li><li>名词动词法</li><li>用例驱动法</li></ul><p>事件风暴是一种 “自底向上” 的设计方法，先关注具体的业务细节，然后通过归纳、聚合、抽象的方法获得整体层面的认知和设计。</p><figure><img src="/assets/image/ddd/process.png" alt="" /><figcaption>DDD 建模的基本原理</figcaption></figure><h1 id="事件风暴介绍">事件风暴介绍</h1><p>事件风暴的发明人是 Alberto Brandolini ，它来源于 Gamestorming，通过工作坊的方式将领域专家和技术专家召集到一起，进行共创建模。</p><p>事件风暴（Event Storming）是一种捕获行为需求的方法，类似传统软件开发的用例分析法。所有人员 (领域专家和技术专家) 对业务行为进行一次发散，并最终收敛达到业务的统一。</p><p>所以事件风暴可以作为 DDD 建模工作坊的一种重要的形式。使用事件风暴工作坊建模的逻辑闭环是：</p><ul><li>产品愿景，识别软件价值和定位</li><li>领域划分，对业务的领域划分，以便能聚焦核心域</li><li>事件风暴，观察业务系统变化的关键点，找出系统状态的变化规律</li><li>命令风暴，找出系统状态的触发者和行为</li><li>寻找模型，找出业务中具有代表性的名词，建立初步的模型</li><li>模型展开，根据领域名词设计聚合、实体、值对象，细化模型</li><li>限界上下文划分，分解问题，战略规划整个系统</li><li>规范化输出，输出为清晰、明了的标准 UML 图</li></ul><h1 id="准备工作">准备工作</h1><p>工作坊的开展需要做一些准备工作，便于有序开展。</p><h2 id="物料场地">物料场地</h2><p>工作坊通俗来说就是相关人员在一起开会，通过一些互动的讨论的方式让每人个人都参与其中。工作坊可以有线下或线上两种形式。</p><p>如果是线下，需要准备一个大的会议室，能容纳足够多的人，并需要准备下列材料：</p><ol type="1"><li>全开大白纸。用于在不平整的墙面上粘贴报事贴，如果是白板墙可以省略。</li><li>3M 报事贴。需要有超过 6 种颜色，用于标识不同的内容。</li><li>马克笔。用于书写和记录。</li><li>蓝丁胶。用于张贴大白纸，或补充报事贴的张贴能力。</li><li>美工刀。必要时，用于切割报事贴。</li></ol><p>如果是在线上进行，需要准备必要的会议和协作软件：</p><ol type="1"><li>zoom。用于视频会议，也可以使用腾讯会议等软件。</li><li>miro。用于白板协作，也可以使用 mura、BeeArt 等软件。</li></ol><h2 id="人员培训">人员培训</h2><p>本工作坊关注于软件架构和建模，需要合适的人员参与，这些人员需要接受过 DDD 和业务培训。</p><ol type="1"><li>组织者。需要了解事件风暴的整个流程，能推动事件风暴工作坊的进行。</li><li>领域专家。领域专家是指熟悉业务规则的人，在工作坊中一般是能敲定业务规则的人。</li><li>技术专家。技术专家是指熟悉技术方案和实现方式的人，能给出可行的技术方案和了解基础设计的限制条件。</li><li>开发团队成员。参与后续开发的团队成员代表，不限制角色，开发、测试、业务分析师都可以参与。</li></ol><p>这些参与人员需要对 DDD 的基本概念有了解和认识，如果没有，需要参加 DDD 基础培训。这些概念包括但不限于如下：</p><ol type="1"><li>领域，以及子域的划分方式</li><li>模型，尤其是软件工程中模型的含义</li><li>事件、命令和执行者</li><li>实体、值对象、聚合、以及聚合根</li><li>限界上下文</li></ol><h2 id="业务输入">业务输入</h2><p>工作坊开始前需要对齐业务输入，比如 PRD 文档、原型图、业务流程等资料，如果没有，需要领域专家做一次业务导入。</p><p>一些业务承载物参考：</p><ol type="1"><li>业务原型图。原型图是最理想的业务表达方式，能够直观的看到交互逻辑。好的原型图需要有基本的交互能力，细化到具体的字段，用例，以及为每一个角色的界面单独出具原型图。</li><li>PRD 文档。有一些产品经理喜欢出具详细的 PRD 文档，也可以作为业务承载物。</li><li>业务流程。一些简单的流程图也可以作为业务承载物，不过需要注意粒度统一，建议以用例为维度设计流程图。</li><li>用例图。极其少的产品经理会绘制用例图，用例图是 UML 建模中极其重要的一种图形，如果有用例图非常有帮助。</li></ol><h2 id="任务目标">任务目标</h2><p>明确本次的工作坊的任务目标，工作坊个常见目标有：</p><ol type="1"><li>现有业务梳理，和模型优化。所有的业务输入以业务现状为准，有时候称为 As-Is。</li><li>会对业务改进，以未来的业务为准，梳理出支持未来业务的模型，有时候称为 To-Be。</li></ol><p>需要对齐工作坊的范围，明确工作坊各阶段的输出，例如：</p><ol type="1"><li>限界上下文映射图</li><li>每个限界上下文的领域模型 UML 图</li></ol><h1 id="识别产品愿景">识别产品愿景</h1><h2 id="概念解释">概念解释</h2><p>产品愿景是企业对其主要的产品的定位，需要表达清楚产品的价值、服务群体、竞争力和主要的竞争对手。 通俗来说就是弄清楚产品背后的生意，然后通过软件来支持和实现。无论是否是传统软件公司或者互联网公司，产品愿景都是头等大事，否则做出来的软件找不到背后的生意，往往无法落地或不赚钱。</p><h2 id="操作方法">操作方法</h2><p>电梯演讲是一种思维工具，它提供了一套模板，用一句话把要做的产品说明白。其来源于著名咨询公司麦肯锡，在乘电梯的 30s 内需要清晰明白地向目标客户讲解清楚方案。</p><p>电梯演讲的格式并不重要，其结果无对错之说，一套简单的形式如下:</p><blockquote><p><strong>对于</strong>：我们的目标客户/用户</p><p><strong>他们想</strong>：目标客户的痛点或者诉求</p><p><strong>这个</strong>：产品名称</p><p><strong>是一个</strong>：什么样的产品类型（软件、网站、工具或平台）</p><p><strong>它可以</strong>：通过什么样的能力，为用户解决什么问题</p><p><strong>不同于</strong>：市场上的竞品及其特点</p><p><strong>它的优势是</strong>：我们产品聚焦的价值和竞争力</p><p><strong>愿景</strong>：概括产品定位</p></blockquote><p>在工作坊中，让领域专家处于核心位置，获取准确的定位，让其他角色做补充。实际操作中，可以在一个大白纸中使用便利贴书写，如果遇到错误可以方便的拿掉。</p><h2 id="示例">示例</h2><p>这里虚拟了一个业务背景作为这份指南的一个案例。我们在设计一个社区产品，这个产品具有圈子的属性，能让用户在圈子中提出和自己专业相关的问题。使用社区产品作为业务示例，是为了考虑到社区是大多数人都熟悉的业务场景，并且复杂性可控（可以做到很简单，也可以拓展的比较复杂）。</p><p>下面是我们的电梯演讲：</p><blockquote><p><strong>对于</strong>：需要找到自己专业问题和回答的用户</p><p><strong>他们想</strong>：提出和自己专业知识相关的问题，以及找到人来回答</p><p><strong>这个</strong>：滴答问题平台</p><p><strong>是一个</strong>：问答平台</p><p><strong>它可以</strong>：通过不同专业圈子，让用户能在特定范围内提出疑问，并获得回答</p><p><strong>不同于</strong>：知乎、贴吧</p><p><strong>它的优势是</strong>：结合圈子的模式，以问答的形式聚焦和归纳问题，留存用户</p><p><strong>愿景</strong>：聚焦专业的问答社区</p></blockquote><h1 id="领域划分">领域划分</h1><h2 id="概念解释-1">概念解释</h2><p>领域（Domain）是业务相关知识的集合。</p><p>子域（Sub Domain）是领域的一部分。子域的划分是为了，识别问题空间的关注重点，建模完成后用来验证解决方案。</p><p>核心域（Core Domain）是指领域中最核心的部分，通常对应企业的核心业务。</p><p>支持域（Support Domain）是一种特殊的子域，是指为了实现核心业务而不得不开发的业务所对应的相关知识的集合。</p><p>通用域（General Domain）是另一种特殊的子域，对应的是业界已经有成熟方案的业务。</p><p>场景（scene）是某种角色的用户，对系统的一系列操作，表现为一组领域事件。</p><p>根据这些场景，从最关键的业务出发，来做事件风暴，弄清楚场景中发生了什么，然后再进行业务建模，以便做出的软件模型，能很好的支持这些场景。</p><p>领域和限界上下文没有相互包含的关系。可以通过分析领域，导出限界上下文，限界上下文需要能支持领域。举个例子来说，某个电商网站有多个渠道，零售、批发、企业采购等多个场景的业务，这是他们的领域。对于研发工程师来说，他们会最终设计出订单、商品等模型上下文，来支持这些领域。</p><h2 id="操作方法-1">操作方法</h2><p>使用电梯演讲，得到产品的愿景和定位，这对业务非常重要。接下来我们需要分析出业务，业务场景是我们需要在软件设计时候满足的功能。</p><p>比如，滴答问题平台在建设的时候，考虑到主要的使用者是对某些行业问题有疑问的用户。于是提供了问答、圈子的场景，可以在某一个圈子提问，并寻找人来回答。</p><p><strong>请注意，滴答问题平台为了演示整个流程，做了大量的简化。</strong>现实中，实际业务会比上面的例子复杂很多，比如专注于企业采购电商网站有企业核验、采购、结算、发票开具、简单进销存、维护工单等场景。</p><p>我们可以把这些场景划分为：核心域、支撑域和通用域。目的是结合产品定位，对业务做出重点分析。但是，<strong>实际上对领域的划分是一个模糊的概念</strong>，领域很难有边界，因此，重点是找出核心域，为后面的寻找事件工作提供输入。</p><p>可以通过文本描述或领域划分图表达领域的划分。场景往往互相交叉，不必在乎场景划分的长度和方式，尽可能足够长和覆盖足够多的场景，可以让模型更准确。</p><h2 id="示例-1">示例</h2><p>滴答问题平台的领域划分为：</p><ol type="1"><li>核心域。问答、圈子场景</li><li>支撑域。<ol type="1"><li>注册登录</li><li>用户个人中心</li><li>用户管理</li></ol></li><li>通用域。验证码发送、自动审核</li></ol><figure><img src="/xxx/ddd-design-workshop-guide/scene-map.png" alt="" /><figcaption>场景地图</figcaption></figure><h1 id="识别事件">识别事件</h1><h2 id="概念解释-2">概念解释</h2><p>事件（Event）是系统状态发生的某种客观现象。</p><p>领域事件（Domain Event）是和领域有关的事件，是在业务上真实发生的客观事实，这些事实对系统会产生关键影响，是观察业务系统变化的关键点。领域事件一般是领域专家关心的。</p><p>事件的评价方式是系统状态是否发生变化。系统状态变化意味着领域模型被业务规则操作，这是观察系统业务的好方法。</p><p>识别领域事件的线索有：</p><ol type="1"><li><p>是否产生了某种数据</p></li><li><p>系统状态是否发生变化，无论这种状态存放到数据库还是内存</p></li><li><p>是否对外发送了某些消息</p></li></ol><h2 id="操作方法-2">操作方法</h2><p>选定一个业务场景为单位，确定一个开始事件和一个结束事件，事件格式参考 “XXX 已 YYY”，比如 “用户已登录”。使用便利贴在物理墙面上张贴，或在电子白板中操作。</p><p>需要注意：</p><ol type="1"><li>建议参考图例选定便利贴颜色，并把图例标识在白板中。</li><li>确定起始事件和结束事件，事件以 “XXX 已 YYY” 的形式进行命名;</li><li>按照时间线的先后顺序和并行组织事件。</li><li>使用 “规则” 便利贴处理分支流程，将 “规则” 放到事件前面，也可以使用线条来处理。</li></ol><p>便利贴参考图例：</p><figure><img src="/xxx/ddd-design-workshop-guide/sotorming-case.png" alt="" /><figcaption>风暴图例</figcaption></figure><h2 id="示例-2">示例</h2><figure><img src="/xxx/ddd-design-workshop-guide/event-storming.png" alt="" /><figcaption>事件风暴</figcaption></figure><h1 id="识别命令">识别命令</h1><h2 id="概念解释-3">概念解释</h2><p><strong>命令（Command）是执行者发起的操作，构成要件是执行者和行为。</strong></p><p>命令可以类比于 UML 分析中的业务用例，是某个场景中领域事件的触发动作，在技术实现的时候，对应应用层中的一个方法。</p><p><strong>执行者（Actor）是指使用系统的主体，是导致系统状态变化的触发源。</strong></p><p>执行者有点像 UML 的涉众，不过区别是执行者不仅是用户，还包括外部系统和本系统。 在事件风暴中，执行者可以是：用户、外部系统、本系统、定时器。</p><ul><li><p><strong>用户（User）</strong> 是指使用软件或服务的人。用户可以有不同的角色，通常我们会把不同角色的相似行为作为不同的命令来处理，有可能得到同样的事件。比如系统出现了商品已添加的事件，有可能有多个触发的场景：</p><ol type="1"><li>系统管理员在后台中添加</li><li>商户在自己的管理平台中添加</li><li>导入任务在特定时间添加。</li></ol></li><li><p><strong>外部系统（Out System）</strong> 是开放 API 的调用发起者。</p></li><li><p><strong>本系统（System）</strong> 指系统本身，事件的触发可以由用户、外部系统、定时器触发，也可以由上一个事件触发，因此这里的触发者（主体）就是系统本身。</p></li><li><p><strong>定时器（Timer）</strong> 通常是定时任务，定时器可以作为执行者，不过需要区别于本系统这个触发源。定时器可以看待为外部一个时间信号源，类似于计算机中主机中的振荡器。</p></li></ul><h2 id="操作方法-3">操作方法</h2><ol type="1"><li>针对每一个领域事件，从业务视角上，寻找产生该事件直接相关的动作，识别为命令。</li><li>每一个领域事件都至少有一个命令对应。</li><li>命令尽可能使用有意义的业务术语， 避免将事件倒过来写作为命令。因为，一个命令可以对应多个事件。比如用户被添加，可以是管理员 “添加用户”命令实现，也可能是用户 “注册”的命令实现。</li><li>每一个命令需要注明执行者。“执行者” - “命令” - “事件”构成一个逻辑合理的句子。</li><li>如果命令由上一个事件触发，可以使用箭头标注，可以省略执行者。</li></ol><p>需要注意：</p><p>在操作时，在命令和事件之间保留一个便利贴的位置，为后面的流程腾出位置。</p><h2 id="示例-3">示例</h2><figure><img src="/xxx/ddd-design-workshop-guide/command-storming.png" alt="" /><figcaption>命令风暴</figcaption></figure><h1 id="识别模型">识别模型</h1><h2 id="概念解释-4">概念解释</h2><p>在这个阶段，我们尚不引入模型在技术实现上的细节，比如（聚合根、实体、值对象等），为了保证模型在业务上的简单性，先使用 “领域名词” 代替。</p><p><strong>模型（Model）是对对象、人或系统的信息表示。它通过较为简单的信息结构来代表我们需要理解的复杂事物或系统。</strong></p><p><strong>领域模型（Domain Model）是业务概念在程序中的一种表达方式。</strong></p><p>模型是用来设计和理解整个软件结构，切记不要建立事无巨细的模型。在模型思维中，模型是简单的，能反应业务概念即可。在事件风暴过程中，由于事件是关键点，可以体现出关键的业务模型所体现的业务逻辑变化。</p><p>他们的逻辑关系是：</p><ul><li>执行者是业务的主体，是业务行为的发起方。</li><li>命令是业务描述的行为，通常可以作为软件的一个功能。</li><li>事件是业务现象，是业务行为发生的结果。</li><li>领域模型是业务的客体。在软件设计中为被操作方和状态承载方。</li></ul><p>用自然语言来概括就是：【执行者】发起了【命令】，产生了【事件】，导致【领域模型】的状态变化。</p><h2 id="操作方法-4">操作方法</h2><ol type="1"><li>尽可能的连接已经完成的场景，覆盖的场景越多对模型的建立越有利。</li><li>在每一对命令和事件之间，识别出业务相关的业务概念，并使用<strong>名词</strong>形式贴出。</li><li>对领域名词做出比较准确的定义，明确概念的内涵、外延，注意区分集合类、个体类词汇。</li><li>注意名词的二义性，使用不同的名词标注。比如商品和订单的商品，订单的商品和在售的商品有二义性，需要重命名为 “订单项”。</li><li>在这一步完成前，可以先对连接起来的场景进行逆向检查，有逆向检查触发更深刻的讨论。</li></ol><h2 id="示例-4">示例</h2><figure><img src="/xxx/ddd-design-workshop-guide/modling.png" alt="" /><figcaption>识别模型</figcaption></figure><h1 id="模型展开">模型展开</h1><h2 id="概念解释-5">概念解释</h2><p>为了更好的编写代码还需要对生命周期以及业务规则强一致的模型做出区分。其现实意义之一就是避免在设计数据库时变成一张网，而应该退化成一棵树。因此需要设计聚合。</p><p><strong>聚合（Aggregate）是一组生命周期以及业务规则强一致的实体和值对象的集合，表达统一的业务意义。</strong> 聚合的意义在于让业务统一、一致，在面向对象中有非常重要价值。聚合是在相同的上下文中，不能跨上下文。</p><p><strong>实体（Entity）是在相同上下文中具有唯一标识的领域模型，可变化，通过标识判断同一性。</strong> 领域模型可以是一个广义的概念，建模的结果和中间过程其实都可以看做模型。</p><p><strong>值对象（Value Object）是一种特殊的领域模型，值对象是以内容判断，不可变，同一性。</strong> ID 标识，但是值对象是用属性标识，任何属性的变化都视为新的对象。比如一个银行账户，可以由 ID 唯一标识，币种和余额可以被修改但是还是同一个账户；交易单中的金额由币种和数值组成，无论修改哪一个属性，金额都不再是原来的金额。</p><p><strong>聚合根（Aggregate Root）是聚合中最核心的实体，其他的实体和值对象都从属于这个实体。</strong> 要管理聚合必须使用一个聚合根，然后使用聚合根来实现发现、持久化聚合的作用，完成统一的业务意义。一个聚合中有且只有一个聚合根，聚合也可以只有一个单独的实体。</p><h2 id="操作方法-5">操作方法</h2><p>设计聚合，并定义出所有的属性。</p><ol type="1"><li>抽取上个步骤中的模型，到新的白板。</li><li>用不同的便利贴代表聚合根、普通实体、值对象</li><li>聚合根和实体、值对象的引用关系使用实线相连</li><li>聚合内可以引用其他聚合根，使用虚线相连</li><li>使用单独的便利贴为每个模型写出属性 [可选，用于编码时容易落地]</li></ol><p>参考图例：</p><figure><img src="/xxx/ddd-design-workshop-guide/modeling-case.png" alt="" /><figcaption>模型图例</figcaption></figure><p>注意事项：</p><ol type="1"><li>聚合不易过大，否则在持久化和实现上比较麻烦。</li><li>警惕多对多关系，多对多关系往往意味着丢失了中间模型，应该转换为两个聚合，其中一个聚合为一对多关系。</li><li>为了只体现聚合带来的业务一致性，我们忽略了查询操作，如果特殊情况需要标注可以使用读模型。</li></ol><h2 id="示例-5">示例</h2><figure><img src="/xxx/ddd-design-workshop-guide/modeling-extract.png" alt="" /><figcaption>模型展开</figcaption></figure><h1 id="限界上下文划分">限界上下文划分</h1><h2 id="概念解释-6">概念解释</h2><p><strong>限界上下文（Bounded context）是一个显式边界（边界：通常是一个子系统或者一个特定团队的工作），领域模型存在于边界之内。建立模型过程中形成了通用语言，通用语言在特定上下文中才有明确的意义。</strong></p><p>限界上下文强调概念的一致性。DDD 不追求全局的一致性，而是将系统拆成多块，在相同的上下文中实现概念一致性。识别上下文可以从概念的二义性着手，比如商品的概念在物流、交易、支付含义完全不一样，但具有不同内涵和外延，实际上他们处在不同上下文。</p><p>限界上下文划分是应用 DDD 的一个难点，其本质就是对同类模型的划分，可以借助下列线索：</p><ol type="1"><li><strong>模型的二义性。</strong> 二义性往往标志着模型在概念上不同，比如系统地址、用户添加的地址、订单中的地址，有不同的含义，意味着有不同的上下文。</li><li><strong>模型状态变化的相关性。</strong> 状态不相干的模型即使没有二义性，他们也属于不同的上下文。比如商品和用户，商品的状态变化和用户的状态变化关系不大，考虑不同的上下文。</li><li><strong>模型的之间的关系。</strong> 根据模型之间的关系强弱找到边界，如果模型之间有较强的关联关系，不应该划分开。</li><li><strong>编码实现的成本。</strong> 比如业务上有强一致事务需求、频繁联表查询需求等潜在成本。这个是为了避免限界上下文过于微小，可以把同类的上下文合并。比如配置管理相关的一些模型，虽然各自比较独立，相关性不大，也可以考虑放到一个限界上下文。</li><li><strong>能力的独立性。</strong>是否能相对独立提供服务和能力，此举可以避免上下文划分过小，带来额外的开发、认知的成本。</li></ol><h2 id="操作方法-6">操作方法</h2><ol type="1"><li>我们以聚合为单位对模型进行上下文划分。将全部聚合名称使用单独的便利贴，提取到一个单独的白板中，进行去重处理。</li><li>先对聚合根据相关性分类，根据讨论，逐步内聚形成上下文</li><li>根据上面的线索设计上下文。</li><li>补充上下文的依赖关系。依赖的意思是信息的流动，比如订单上下文依赖商品上下文，意味着订单上下文需要知道商品上下文的信息，反之不需要。</li></ol><h2 id="示例-6">示例</h2><figure><img src="/xxx/ddd-design-workshop-guide/context-mapping.png" alt="" /><figcaption>上下文映射</figcaption></figure><p>由于我们的示例比较简单，这里再补充一个复杂的示例。</p><figure><img src="/xxx/ddd-design-workshop-guide/context-mapping-2.png" alt="" /><figcaption>上下文映射-2</figcaption></figure><h1 id="规范化输出">规范化输出</h1><p>工作坊期间通常使用便利贴表达内容，这些内容不适合最终落地使用。本阶段需要对白板的数据做整理，并形成规范化的输出。</p><h2 id="操作方法-7">操作方法</h2><p>通常来说 UML 是一种比较好的模型表达工具。如果考虑代码化的 UML 的工具，可以使用 PlantUML。</p><p>PlantUML 可以通过简单直观的语言来定义模型图，为了使用 UML 表达 DDD 中的概念，采用如下约定：</p><ol type="1"><li>使用 namespace 表达限界上下文</li><li>使用 package 表示一个聚合</li><li>使用类表示领域模型</li><li>使用组合表达模型的关系</li></ol><p>参考官网 https://plantuml.com/zh/class-diagram 或在 Intellij IDEA 中安装 plantuml 插件。</p><h2 id="示例-7">示例</h2><p>UML 描述语言：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">@startuml<br>namespace <span class="hljs-keyword">user</span>-context &#123;<br>   <span class="hljs-keyword">User</span> &lt;&lt;<span class="hljs-keyword">Aggregate</span> Root&gt;&gt;<br>   VerifyCode &lt;&lt;<span class="hljs-keyword">Aggregate</span> Root&gt;&gt;<br>   <span class="hljs-keyword">Authorization</span> &lt;&lt;<span class="hljs-keyword">Aggregate</span> Root&gt;&gt;<br>&#125;<br><br>namespace question-context &#123;<br>  Question &lt;&lt;<span class="hljs-keyword">Aggregate</span> Root&gt;&gt;<br>  Anwser <span class="hljs-symbol">&lt;&lt;Entity&gt;&gt;</span><br>  Question &quot;1&quot; *<span class="hljs-comment">-- &quot;N&quot; Anwser</span><br>&#125;<br><br>namespace space-context &#123;<br>  Space &lt;&lt;<span class="hljs-keyword">Aggregate</span> Root&gt;&gt;<br>  SpaceMember <span class="hljs-symbol">&lt;&lt;Entity&gt;&gt;</span><br>  Space &quot;1&quot; *<span class="hljs-comment">-- &quot;N&quot; SpaceMember</span><br>  SpaceApply <span class="hljs-symbol">&lt;&lt;Entity&gt;&gt;</span><br>  Space &quot;1&quot; *<span class="hljs-comment">-- &quot;1&quot; SpaceApply</span><br>&#125;<br>@enduml<br></code></pre></td></tr></table></figure><p>图形：</p><figure><img src="/xxx/ddd-design-workshop-guide/uml-model.png" alt="" /><figcaption>UML 输出</figcaption></figure><h1 id="参考资料">参考资料</h1><ul><li><a href="https://blog.csdn.net/xiaofeng10330111/article/details/105358094">《如何使用事件风暴构建领域模型》</a></li><li><a href="https://zhuanlan.zhihu.com/p/95001438">【领域驱动设计】事件风暴小体验</a></li><li><a href="http://www.360doc.com/content/19/0802/20/366082_852637712.shtml">《使用事件风暴探索业务全景》</a></li><li><a href="http://www.woshipm.com/pmd/3548368.html">如何用“电梯演讲”表述你的产品愿景?</a></li><li><a href="https://smapxy.axshare.com">管理员端原型图</a></li><li><a href="https://5kebz3.axshare.com">用户端原型图</a></li></ul>]]></content>
    
    
    <summary type="html">DDD 建模工作坊指南。</summary>
    
    
    
    <category term="架构设计" scheme="https://withesse.co/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="DDD" scheme="https://withesse.co/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/DDD/"/>
    
    
    <category term="DDD" scheme="https://withesse.co/tags/DDD/"/>
    
  </entry>
  
  <entry>
    <title>Linux Tun/Tap 介绍</title>
    <link href="https://withesse.co/post/Introduction-to-linux-tuntap/"/>
    <id>https://withesse.co/post/Introduction-to-linux-tuntap/</id>
    <published>2020-10-03T13:00:00.000Z</published>
    <updated>2020-10-03T13:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>本文为转载，版权归原作者所有。</p><p>本文作者：Huabing Zhao</p><p>原文地址：<a href="https://www.zhaohuabing.com/post/2020-02-24-linux-taptun/" class="uri">https://www.zhaohuabing.com/post/2020-02-24-linux-taptun/</a></p>          </div><h2 id="什么是tuntap">什么是Tun/Tap</h2><p>在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备。不同于普通靠硬件网路板卡实现的设备，这些虚拟的网络设备全部用软件实现，并向运行于操作系统上的软件提供与硬件的网络设备完全相同的功能。</p><p>TAP等同于一个以太网设备，它操作第二层数据包如以太网数据帧。TUN模拟了网络层设备，操作第三层数据包比如IP数据封包。</p><p>操作系统通过TUN/TAP设备向绑定该设备的用户空间的程序发送数据，反之，用户空间的程序也可以像操作硬件网络设备那样，通过TUN/TAP设备发送数据。在后种情况下，TUN/TAP设备向操作系统的网络栈投递（或“注入”）数据包，从而模拟从外部接受数据的过程。</p><h2 id="应用程序如何操作tuntap">应用程序如何操作Tun/Tap</h2><p>Linux Tun/Tap驱动程序为应用程序提供了两种交互方式：虚拟网络接口和字符设备/dev/net/tun。写入字符设备/dev/net/tun的数据会发送到虚拟网络接口中；发送到虚拟网络接口中的数据也会出现在该字符设备上。</p><p>应用程序可以通过标准的Socket API向Tun/Tap接口发送IP数据包，就好像对一个真实的网卡进行操作一样。除了应用程序以外，操作系统也会根据TCP/IP协议栈的处理向Tun/Tap接口发送IP数据包或者以太网数据包，例如ARP或者ICMP数据包。Tun/Tap驱动程序会将Tun/Tap接口收到的数据包原样写入到/dev/net/tun字符设备上，处理Tun/Tap数据的应用程序如VPN程序可以从该设备上读取到数据包，以进行相应处理。</p><p>应用程序也可以通过/dev/net/tun字符设备写入数据包，这种情况下该字符设备上写入的数据包会被发送到Tun/Tap虚拟接口上，进入操作系统的TCP/IP协议栈进行相应处理，就像从物理网卡进入操作系统的数据一样。</p><p>Tun虚拟设备和物理网卡的区别是Tun虚拟设备是IP层设备，从/dev/net/tun字符设备上读取的是IP数据包，写入的也只能是IP数据包，因此不能进行二层操作，如发送ARP请求和以太网广播。与之相对的是，Tap虚拟设备是以太网设备，处理的是二层以太网数据帧，从/dev/net/tun字符设备上读取的是以太网数据帧，写入的也只能是以太网数据帧。从这点来看，Tap虚拟设备和真实的物理网卡的能力更接近。</p><p>下图描述了Tap/Tun的工作原理：<img src="/assets/image/network/introduction-to-linux-tuntap/linux-tuntap.png" alt="img" /></p><h2 id="使用tuntap创建点对点隧道">使用Tun/Tap创建点对点隧道</h2><p>通过应用程序从/dev/net/tun字符设备中读取或者写入数据看上去并没有太大用处，但通过将Tun/Tap结合物理网络设备使用,我们可以创建一个点对点的隧道。如下图所示，左边主机上应用程序发送到Tun虚拟设备上的IP数据包被VPN程序通过字符设备接收，然后再通过一个TCP或者UDP隧道发送到右端的VPN服务器上，VPN服务器将隧道负载中的原始IP数据包写入字符设备，这些IP包就会出现在右侧的Tun虚拟设备上，最后通过操作系统协议栈和socket接口发送到右侧的应用程序上。</p><figure><img src="/assets/image/network/introduction-to-linux-tuntap/linux-tun-tunnel.png" alt="" /><figcaption>img</figcaption></figure><p>上图中的隧道也可以采用Tap虚拟设备实现。使用Tap的话，隧道的负载将是以太数据帧而不是IP数据包，而且还会传递ARP等广播数据包。<img src="/assets/image/network/introduction-to-linux-tuntap/linux-tap-tunnel.png" alt="img" /></p><h2 id="使用tuntap隧道绕过防火墙">使用Tun/Tap隧道绕过防火墙</h2><p>结合路由规则和IPTables规则，可以将VPN服务器端的主机作为连接外部网络的网关，以绕过防火墙对客户端的一些外部网络访问限制。如下图所示，防火墙规则允许客户端访问主机IP2，而禁止访问其他Internet上的节点。通过采用Tun隧道，从防火墙角度只能看到被封装后的数据包，因此防火墙认为客户端只是在访问IP2，会对数据进行放行。而VPN服务端在解包得到真实的访问目的后，会通过路由规则和IPTables规则将请求转发到真正的访问目的地上，然后再将真实目的地的响应IP数据包封装进隧道后原路返回给客户端，从而达到绕过防火墙限制的目的。<img src="/assets/image/network/introduction-to-linux-tuntap/linux-access-internet-via-tunnel.png" alt="img" /></p><h2 id="使用tap隧道桥接两个远程站点">使用Tap隧道桥接两个远程站点</h2><p>如下图所示，可以使用tap建立二层隧道将两个远程站点桥接起来，组成一个局域网。对于两边站点中的主机来说，访问对方站点的主机和本地站点的主机的方式没有区别，都处于一个局域网192.168.0.0/24中。</p><p>VPN主机上有两个物理网卡，其中Eth0用于和对方站点的VPN主机进行通信，建立隧道。Eth1在通过网线连接到以太网交换机的同时也被则加入了Linux Bridge，这相当于用一条网线将Linux Bridge上的一个端口（Eth1）连接到了本地站点的以太网交换机上，Eth1上收到的所有数据包都会被发送到Linux Bridge上，Linux Bridge发给Eth1的数据包也会被发送到以太网交换机上。Linux Bridge上还有一个Tap虚拟网卡，用于VPN程序接收从Linux Bridge上收到的数据包。</p><figure><img src="/assets/image/network/introduction-to-linux-tuntap/linux-bridge-tunnel.png" alt="" /><figcaption>img</figcaption></figure><p>假设192.168.0.5发出了一个对192.168.0.3的ARP请求，该ARP请求在网络中经过的路径如下：</p><ol type="1"><li>192.168.0.5发出ARP请求，询问192.168.0.3的MAC地址。</li><li>该ARP请求将被发送到以太网交换机上。</li><li>以太网交换机对该请求进行泛洪，发送到其包括Eth1在内的所有端口上。</li><li>由于Eth1被加入了VPN主机上的Linux Bridge，因此Linux Bridge收到该ARP请求。</li><li>Linux Bridge对该ARP请求进行泛洪，发送到连到其上面的Tap虚拟网卡上。</li><li>VPN程序通过/dev/net/tun字符设备读取到该ARP请求，然后封装到TCP/UDP包中，发送到对端站点的VPN主机。</li><li>对端站点的VPN程序通过监听TCP/UDP端口接收到封装的ARP请求，将ARP请求通过/dev/net/tun字符设备写入到Tap设备中。</li><li>Linux Bridge泛洪，将ARP请求发送往Eth1，由于Eth1连接到了以太网交换机上，以太网交换机接收到了该ARP请求。</li><li>以太网交换机进行泛洪，将ARP请求发送给了包括192.168.0.3的所有主机。</li><li>192.168.0.3收到了APR请求，判断iP地址和自己相同，对此请求进行响应。</li><li>同理，ARP响应包也可以按照该路径返回到图左边包括192.168.0.5在内的站点中。</li></ol><p>从站点主机的角度来看，上面图中两个VPN主机之间的远程连接可以看作一条虚拟的网线，这条网线将两个Linux Bridge连接起来。这两个Linux Bridge和两个以太网交换机一起将左右两个站点的主机连接在一起，形成了一个局域网。<img src="/assets/image/network/introduction-to-linux-tuntap/linux-bridge-tunnel-simplified.png" alt="img" /></p><h2 id="参考资料">参考资料</h2><ul><li><a href="https://www.kernel.org/doc/Documentation/networking/tuntap.txt">Universal TUN/TAP device driver</a></li><li><a href="http://vtun.sourceforge.net/tun/faq.html">Universal TUN/TAP device driver Frequently Asked Question</a></li><li><a href="https://backreference.org/2010/03/26/tuntap-interface-tutorial/">Tun/Tap interface tutorial</a></li><li><a href="https://github.com/gregnietsky/simpletun/blob/master/simpletun.c">A simplistic, simple-minded, naive tunnelling program using tun/tap interfaces and TCP</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;note note-success&quot;&gt;
            &lt;p&gt;本文为转载，版权归原作者所有。&lt;/p&gt;&lt;p&gt;本文作者：Huabing Zhao&lt;/p&gt;&lt;p&gt;原文地址：&lt;a href=&quot;https://www.zhaohuabing.com/post/</summary>
      
    
    
    
    <category term="Linux" scheme="https://withesse.co/categories/Linux/"/>
    
    <category term="Network" scheme="https://withesse.co/categories/Linux/Network/"/>
    
    
    <category term="linux" scheme="https://withesse.co/tags/linux/"/>
    
    <category term="tun/tap" scheme="https://withesse.co/tags/tun-tap/"/>
    
  </entry>
  
  <entry>
    <title>使用PowerShell批量克隆VMware Workstation虚拟机</title>
    <link href="https://withesse.co/post/how-to-clone-virtual-machine/"/>
    <id>https://withesse.co/post/how-to-clone-virtual-machine/</id>
    <published>2020-05-23T11:00:00.000Z</published>
    <updated>2020-05-23T11:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<!-- # 使用PowerShell批量克隆VMware Workstation虚拟机 --><p>本文将介绍如何使用PowerShell脚本和YAML配置文件克隆和配置VMware虚拟机。</p><p>在开始之前，请确保：</p><ul><li>安装VMware Workstation；</li><li>有一个配置好的虚拟机，用作克隆源；</li><li>安装PowerShell。</li></ul><h2 id="yaml配置文件">YAML配置文件</h2><p>首先，需要一个YAML配置文件来定义虚拟机克隆的参数。配置文件（<code>vmware-deploy.yaml</code>）包含虚拟机组的名称、存储目录、克隆源信息，以及每个虚拟机的名称、hostname、网络和hosts设置。</p><p>以下是YAML配置示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;0.1&#x27;</span><br><br><span class="hljs-attr">description:</span> <span class="hljs-string">Example</span> <span class="hljs-string">configuration</span> <span class="hljs-string">for</span> <span class="hljs-string">clone</span> <span class="hljs-string">VMware</span> <span class="hljs-string">virtual</span> <span class="hljs-string">machines(ubuntu).</span><br><br><span class="hljs-comment"># </span><br><span class="hljs-attr">vmGroup:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">example</span><br>  <span class="hljs-attr">directory:</span> <span class="hljs-string">C:\ProgramsData\VMware\Virtual</span> <span class="hljs-string">Machines\example</span><br>  <span class="hljs-attr">cloneVMSource:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">Ubuntu22.04.3-dev-000</span><br>    <span class="hljs-attr">directory:</span> <span class="hljs-string">C:\ProgramsData\VMware\Virtual</span> <span class="hljs-string">Machines\basic</span><br>  <span class="hljs-attr">instances:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Ubuntu22.04.3-example-01</span><br>      <span class="hljs-attr">hostname:</span> <span class="hljs-string">example01</span><br>      <span class="hljs-attr">ip :</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.221</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">gateway:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><br>      <span class="hljs-attr">dns:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><span class="hljs-string">,1.1.1.1</span><br>      <span class="hljs-attr">hostEntries:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;#The following lines are used for vm_group example&#x27;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.221</span> <span class="hljs-string">example01</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.222</span> <span class="hljs-string">example02</span>       <br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.223</span> <span class="hljs-string">example03</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Ubuntu22.04.3-example-02</span><br>      <span class="hljs-attr">hostname:</span> <span class="hljs-string">example02</span><br>      <span class="hljs-attr">ip :</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.222</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">gateway:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><br>      <span class="hljs-attr">dns:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><span class="hljs-string">,1.1.1.1</span><br>      <span class="hljs-attr">hostEntries:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;#The following lines are used for vm_group example&#x27;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.221</span> <span class="hljs-string">example01</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.222</span> <span class="hljs-string">example02</span>       <br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.223</span> <span class="hljs-string">example03</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Ubuntu22.04.3-example-03</span><br>      <span class="hljs-attr">hostname:</span> <span class="hljs-string">example03</span>  <br>      <span class="hljs-attr">ip :</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.223</span><span class="hljs-string">/24</span><br>      <span class="hljs-attr">gateway:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><br>      <span class="hljs-attr">dns:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.2</span><span class="hljs-string">,1.1.1.1</span><br>      <span class="hljs-attr">hostEntries:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;#The following lines are used for vm_group example&#x27;</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.221</span> <span class="hljs-string">example01</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.222</span> <span class="hljs-string">example02</span>       <br>        <span class="hljs-bullet">-</span> <span class="hljs-number">192.168</span><span class="hljs-number">.226</span><span class="hljs-number">.223</span> <span class="hljs-string">example03</span><br><br></code></pre></td></tr></table></figure><h2 id="powershell脚本">PowerShell脚本</h2><p>vmware-tools.ps1接收YAML文件作为输入，执行以下功能：</p><ul><li>克隆虚拟机；</li><li>设置hostname、网络和hosts文件；</li><li>虚拟机启动、停止和暂停功能。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-keyword">param</span> (<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$command</span>=<span class="hljs-string">&quot;deploy&quot;</span>,<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$file</span>=<span class="hljs-string">&quot;./vmware-deploy.yaml&quot;</span>,<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$vmrunPath</span>= <span class="hljs-string">&quot;C:\Program Files (x86)\VMware\VMware Workstation\vmrun.exe&quot;</span>,<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$username</span> = <span class="hljs-string">&quot;root&quot;</span>,<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$password</span> = <span class="hljs-string">&quot;Abc@12345&quot;</span><br>)<br><br><span class="hljs-variable">$module</span> = <span class="hljs-built_in">Get-Module</span> <span class="hljs-literal">-ListAvailable</span> <span class="hljs-literal">-Name</span> powershell<span class="hljs-literal">-yaml</span><br><span class="hljs-keyword">if</span> (<span class="hljs-operator">-not</span> <span class="hljs-variable">$module</span>) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-built_in">Install-Module</span> <span class="hljs-literal">-Name</span> powershell<span class="hljs-literal">-yaml</span> <span class="hljs-literal">-Scope</span> CurrentUser <span class="hljs-literal">-Force</span> <span class="hljs-literal">-ErrorAction</span> Stop<br>    &#125; <span class="hljs-keyword">catch</span> &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;Failed to install the powershell-yaml module. Please check.&quot;</span><br>        <span class="hljs-keyword">return</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">GetVmxPath</span></span> &#123;<br>    <span class="hljs-keyword">param</span> (<br>        [<span class="hljs-type">ValidateNotNullOrEmpty</span>()]<br>        [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$directory</span>, <br>        [<span class="hljs-type">ValidateNotNullOrEmpty</span>()]<br>        [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$name</span><br>    )<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Join-Path</span> <span class="hljs-variable">$directory</span> <span class="hljs-variable">$name</span> (<span class="hljs-variable">$name</span> + <span class="hljs-string">&quot;.vmx&quot;</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckAllVMsForDeploy</span></span> &#123;<br>    <span class="hljs-keyword">param</span> (<br>        [<span class="hljs-built_in">array</span>]<span class="hljs-variable">$instances</span>,<br>        [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$sourceLocation</span>,<br>        [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$targetLocation</span><br>    )<br>    <span class="hljs-variable">$sourceVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$sourceLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$config</span>.vmGroup.cloneVMSource.name<br>    <span class="hljs-keyword">if</span> (<span class="hljs-operator">-not</span> (<span class="hljs-built_in">Test-Path</span> <span class="hljs-variable">$sourceVmx</span>)) &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The source virtual machine does not exist: <span class="hljs-variable">$sourceVmx</span>&quot;</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$false</span><br>    &#125;<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$instances</span>) &#123;<br>        <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Test-Path</span> <span class="hljs-variable">$destVmx</span>) &#123;<br>            <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The target virtual machine already exists: <span class="hljs-variable">$destVmx</span>&quot;</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$false</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$true</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckAllVMs</span></span> &#123;<br>    <span class="hljs-keyword">param</span> (<br>        [<span class="hljs-built_in">array</span>]<span class="hljs-variable">$instances</span>,<br>        [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$targetLocation</span><br>    )<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$instances</span>) &#123;<br>        <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>        <span class="hljs-keyword">if</span> (<span class="hljs-operator">-not</span> (<span class="hljs-built_in">Test-Path</span> <span class="hljs-variable">$destVmx</span>)) &#123;<br>            <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The target virtual machine does not exists.: <span class="hljs-variable">$destVmx</span>&quot;</span><br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$false</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$true</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">CheckVMStartedStatus</span></span>&#123;<br>    <span class="hljs-keyword">param</span> (<br>    [<span class="hljs-built_in">string</span>]<span class="hljs-variable">$vmxPath</span> ,<br>    [<span class="hljs-built_in">int</span>]<span class="hljs-variable">$maxChecks</span> = <span class="hljs-number">5</span> <br>)<br>    <span class="hljs-variable">$checkCount</span> = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">do</span> &#123;<br>        <span class="hljs-variable">$runningVMs</span> = &amp; <span class="hljs-variable">$vmrunPath</span> list<br>        <span class="hljs-variable">$vmStarted</span> = <span class="hljs-variable">$runningVMs</span> <span class="hljs-operator">-match</span> [<span class="hljs-type">regex</span>]::Escape(<span class="hljs-variable">$vmxPath</span>)<br>        <span class="hljs-variable">$checkCount</span>++<br>        <span class="hljs-keyword">if</span> (<span class="hljs-operator">-not</span> <span class="hljs-variable">$vmStarted</span>) &#123;<br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Waiting for the virtual machine to start... (<span class="hljs-variable">$checkCount</span>/<span class="hljs-variable">$maxChecks</span>)&quot;</span><br>            <span class="hljs-built_in">Start-Sleep</span> <span class="hljs-literal">-Seconds</span> <span class="hljs-number">5</span> <br>        &#125;<br>    &#125; <span class="hljs-keyword">while</span> (<span class="hljs-operator">-not</span> <span class="hljs-variable">$vmStarted</span> <span class="hljs-operator">-and</span> <span class="hljs-variable">$checkCount</span> <span class="hljs-operator">-lt</span> <span class="hljs-variable">$maxChecks</span>)<br>    <span class="hljs-keyword">if</span>(<span class="hljs-operator">-not</span> <span class="hljs-variable">$vmStarted</span>)&#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;Virtual machine failed to start：<span class="hljs-variable">$vmxPath</span>&quot;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">DeployVMs</span></span>&#123;<br>    <span class="hljs-keyword">param</span>(<br>        [<span class="hljs-type">Parameter</span>(<span class="hljs-type">Mandatory</span>=<span class="hljs-variable">$true</span>)]<br>        [<span class="hljs-type">object</span>]<span class="hljs-variable">$config</span><br>    )<br>    <span class="hljs-variable">$sourceLocation</span> = <span class="hljs-variable">$config</span>.vmGroup.cloneVMSource.directory<br>    <span class="hljs-variable">$targetLocation</span> = <span class="hljs-variable">$config</span>.vmGroup.directory<br>    <span class="hljs-keyword">if</span> (CheckAllVMsForDeploy <span class="hljs-literal">-instances</span> <span class="hljs-variable">$config</span>.vmGroup.instances <span class="hljs-literal">-sourceLocation</span> <span class="hljs-variable">$sourceLocation</span> <span class="hljs-literal">-targetLocation</span> <span class="hljs-variable">$targetLocation</span>) &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$config</span>.vmGroup.instances) &#123;<br>            <span class="hljs-variable">$cloneFolderPath</span> = <span class="hljs-built_in">Join-Path</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-variable">$instance</span>.name<br>            <span class="hljs-variable">$sourceVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$sourceLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$config</span>.vmGroup.cloneVMSource.name<br>            <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>            <span class="hljs-keyword">if</span> (<span class="hljs-operator">-not</span> (<span class="hljs-built_in">Test-Path</span> <span class="hljs-variable">$cloneFolderPath</span>)) &#123;<br>                <span class="hljs-built_in">New-Item</span> <span class="hljs-literal">-Path</span> <span class="hljs-variable">$cloneFolderPath</span> <span class="hljs-literal">-ItemType</span> Directory<br>            &#125;<br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Clone virtual machine: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> clone <span class="hljs-variable">$sourceVmx</span> <span class="hljs-variable">$destVmx</span> full <span class="hljs-literal">-cloneName</span>=<span class="hljs-string">&quot;<span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Start virtual machine: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-built_in">start</span> <span class="hljs-variable">$destVmx</span><br>            CheckVMStartedStatus <span class="hljs-literal">-vmxPath</span> <span class="hljs-variable">$destVmx</span><br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Modify the virtual machine&#x27;s hostname: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-literal">-T</span> ws <span class="hljs-literal">-gu</span> <span class="hljs-variable">$username</span> <span class="hljs-literal">-gp</span> <span class="hljs-variable">$password</span> runScriptInGuest <span class="hljs-variable">$destVmx</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;echo &#x27;<span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.hostname)&#x27; | tee /etc/hostname  &amp;&amp; hostname -F /etc/hostname&quot;</span><br>            <span class="hljs-variable">$netplanConfig</span> = <span class="hljs-string">@&quot;</span><br><span class="hljs-string">network:</span><br><span class="hljs-string">  version: 2</span><br><span class="hljs-string">  ethernets:</span><br><span class="hljs-string">    ens33:</span><br><span class="hljs-string">      dhcp4: no</span><br><span class="hljs-string">      addresses: [<span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.ip)]</span><br><span class="hljs-string">      routes:</span><br><span class="hljs-string">        - to: default</span><br><span class="hljs-string">          via: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.gateway)</span><br><span class="hljs-string">      nameservers:</span><br><span class="hljs-string">          addresses: [<span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.dns)]</span><br><span class="hljs-string">&quot;@</span><br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Modify the virtual machine&#x27;s network settings: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-literal">-T</span> ws <span class="hljs-literal">-gu</span> <span class="hljs-variable">$username</span> <span class="hljs-literal">-gp</span> <span class="hljs-variable">$password</span>  runScriptInGuest <span class="hljs-variable">$destVmx</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;echo &#x27;<span class="hljs-variable">$netplanConfig</span>&#x27; |  tee /etc/netplan/00-installer-config.yaml&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-literal">-T</span> ws <span class="hljs-literal">-gu</span> <span class="hljs-variable">$username</span> <span class="hljs-literal">-gp</span> <span class="hljs-variable">$password</span>  runScriptInGuest <span class="hljs-variable">$destVmx</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;netplan apply&quot;</span><br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Modify the virtual machine&#x27;s hosts: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$hostEntry</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$instance</span>.hostEntries) &#123;<br>                &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-literal">-T</span> ws <span class="hljs-literal">-gu</span> <span class="hljs-variable">$username</span> <span class="hljs-literal">-gp</span> <span class="hljs-variable">$password</span>  runScriptInGuest <span class="hljs-variable">$destVmx</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-string">&quot;echo &#x27;<span class="hljs-variable">$hostEntry</span>&#x27; | tee -a /etc/hosts&quot;</span><br>            &#125;        <br>        <span class="hljs-comment"># Write-Host &quot;重启虚拟机: $($instance.name)&quot;</span><br>        <span class="hljs-comment"># &amp; $vmrunPath -T ws -gu $username -gp $password  runScriptInGuest $destVmx &quot;&quot; &quot;systemctl reboot&quot;</span><br>        &#125;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;The virtual machine group clone is complete.&quot;</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The Deploy process has stopped due to a failed existence check.&quot;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">StartVMs</span></span> &#123;<br>    <span class="hljs-keyword">param</span>(<br>        [<span class="hljs-type">Parameter</span>(<span class="hljs-type">Mandatory</span>=<span class="hljs-variable">$true</span>)]<br>        [<span class="hljs-type">object</span>]<span class="hljs-variable">$config</span><br>    )<br>    <span class="hljs-variable">$targetLocation</span> = <span class="hljs-variable">$config</span>.vmGroup.directory<br>    <span class="hljs-keyword">if</span> (CheckAllVMs <span class="hljs-literal">-instances</span> <span class="hljs-variable">$config</span>.vmGroup.instances <span class="hljs-literal">-targetLocation</span> <span class="hljs-variable">$targetLocation</span>) &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$config</span>.vmGroup.instances) &#123;<br>            <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Start the virtual machine: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> <span class="hljs-built_in">start</span> <span class="hljs-variable">$destVmx</span><br>        &#125;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;The virtual machine group has been successfully started&quot;</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The Start process has stopped due to a failed existence check.&quot;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">StopVMs</span></span> &#123;<br>    <span class="hljs-keyword">param</span>(<br>        [<span class="hljs-type">Parameter</span>(<span class="hljs-type">Mandatory</span>=<span class="hljs-variable">$true</span>)]<br>        [<span class="hljs-type">object</span>]<span class="hljs-variable">$config</span><br>    )<br>    <span class="hljs-variable">$targetLocation</span> = <span class="hljs-variable">$config</span>.vmGroup.directory<br>    <span class="hljs-keyword">if</span> (CheckAllVMs <span class="hljs-literal">-instances</span> <span class="hljs-variable">$config</span>.vmGroup.instances <span class="hljs-literal">-targetLocation</span> <span class="hljs-variable">$targetLocation</span>) &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$config</span>.vmGroup.instances) &#123;<br>            <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Stop the virtual machine: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> stop <span class="hljs-variable">$destVmx</span><br>        &#125;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;The virtual machine group has been successfully stopped&quot;</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The Stop process has stopped due to a failed existence check.&quot;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">SuspendVMs</span></span>&#123;<br>    <span class="hljs-keyword">param</span>(<br>        [<span class="hljs-type">Parameter</span>(<span class="hljs-type">Mandatory</span>=<span class="hljs-variable">$true</span>)]<br>        [<span class="hljs-type">object</span>]<span class="hljs-variable">$config</span><br>    )<br>    <span class="hljs-variable">$targetLocation</span> = <span class="hljs-variable">$config</span>.vmGroup.directory<br>    <span class="hljs-keyword">if</span> (CheckAllVMs <span class="hljs-literal">-instances</span> <span class="hljs-variable">$config</span>.vmGroup.instances <span class="hljs-literal">-targetLocation</span> <span class="hljs-variable">$targetLocation</span>) &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$instance</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$config</span>.vmGroup.instances) &#123;<br>            <span class="hljs-variable">$destVmx</span> = GetVmxPath <span class="hljs-literal">-directory</span> <span class="hljs-variable">$targetLocation</span> <span class="hljs-literal">-name</span> <span class="hljs-variable">$instance</span>.name<br>            <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Suspend the virtual machine: <span class="hljs-variable">$</span>(<span class="hljs-variable">$instance</span>.name)&quot;</span><br>            &amp; <span class="hljs-variable">$vmrunPath</span> suspend <span class="hljs-variable">$destVmx</span><br>        &#125;<br>        <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;The virtual machine group has been successfully suspende.&quot;</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;The Suspend process has stopped due to a failed existence check.&quot;</span><br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-comment"># Read YAML configuration file</span><br>    <span class="hljs-variable">$configData</span> = <span class="hljs-built_in">Get-Content</span> <span class="hljs-variable">$file</span> <span class="hljs-literal">-Raw</span> | <span class="hljs-built_in">ConvertFrom-Yaml</span><br>    <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$command</span>) &#123;<br>        <span class="hljs-string">&quot;deploy&quot;</span> &#123; DeployVMs <span class="hljs-literal">-config</span> <span class="hljs-variable">$configData</span> &#125;<br>        <span class="hljs-string">&quot;start&quot;</span> &#123; StartVMs <span class="hljs-literal">-config</span> <span class="hljs-variable">$configData</span> &#125;<br>        <span class="hljs-string">&quot;stop&quot;</span> &#123; StopVMs <span class="hljs-literal">-config</span> <span class="hljs-variable">$configData</span> &#125;<br>        <span class="hljs-string">&quot;suspend&quot;</span> &#123; SuspendVMs <span class="hljs-literal">-config</span> <span class="hljs-variable">$configData</span> &#125;<br>        default &#123; <span class="hljs-built_in">Write-Host</span> <span class="hljs-string">&quot;Unknown command: <span class="hljs-variable">$command</span>&quot;</span> &#125;<br>    &#125;<br>&#125; <span class="hljs-keyword">catch</span> &#123;<br>    <span class="hljs-built_in">Write-Error</span> <span class="hljs-string">&quot;An error occurred: <span class="hljs-variable">$_</span>&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="如何使用">如何使用</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># depoly</span><br>.\vmware<span class="hljs-literal">-tools</span>.ps1<br>or<br>.\vmware<span class="hljs-literal">-tools</span>.ps1 <span class="hljs-operator">-file</span> <span class="hljs-string">&quot;./vmware-deploy-another.yaml&quot;</span><br><br><span class="hljs-comment">#start</span><br>.\vmware<span class="hljs-literal">-tools</span>.ps1 <span class="hljs-built_in">start</span><br><br><span class="hljs-comment">#stop</span><br>.\vmware<span class="hljs-literal">-tools</span>.ps1 stop<br><br><span class="hljs-comment">#suspend</span><br>.\vmware<span class="hljs-literal">-tools</span>.ps1 suspend<br></code></pre></td></tr></table></figure><p>在使用之前，请根据你自己的需求调整。</p><h2 id="参考资料">参考资料</h2><ul><li><a href="https://docs.vmware.com/en/VMware-Workstation-Pro/17/com.vmware.ws.using.doc/GUID-A28FA25B-5529-4D95-9F7B-4CFBB8DF2AA7.html">Using the vmrun Command to Control Virtual Machines</a></li></ul>]]></content>
    
    
    <summary type="html">介绍如何使用PowerShell脚本和YAML配置文件克隆和配置VMware虚拟机。</summary>
    
    
    
    <category term="Tools" scheme="https://withesse.co/categories/Tools/"/>
    
    <category term="PowerShell" scheme="https://withesse.co/categories/Tools/PowerShell/"/>
    
    
    <category term="powershell" scheme="https://withesse.co/tags/powershell/"/>
    
    <category term="vmware" scheme="https://withesse.co/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>HotSpot术语表（待整理）</title>
    <link href="https://withesse.co/post/hotspot-glossary-of-terms/"/>
    <id>https://withesse.co/post/hotspot-glossary-of-terms/</id>
    <published>2019-12-17T09:37:18.000Z</published>
    <updated>2019-12-17T09:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<!--文章摘要信息--><blockquote><p>HotSpot虚拟机相关术语，以及部分补充扩展。</p></blockquote><!--Notice--><blockquote><p><strong>注意：</strong>本文章由本人整理翻译，并添加部分扩展内容，如有错误，敬请指正。</p></blockquote><p>A work in progress, especially as the HotSpot VM evolves. But a place to put definitions of things so we only have to define them once. There are empty entries (marked <em>TBD</em> for "to be defined") because we think of things that we need to define faster than we think of good definitions.</p><p>这是一项正在进行的工作，尤其是在 HotSpot VM 不断发展的过程中。这是一个放置关于HotSpot中一些概念定义的地方，所以我们只需要定义它们一次。其中有部分空条目（标记为_TBD_表示"待定义"）表示待定义，因为我们想要在想到更好的定义前快速定义出需要相关概念。</p><h2 id="adaptive-spinning">adaptive spinning</h2><p>An optimization technique whereby a thread spins waiting for a change-of-state to occur (typically a flag that represents some event has occurred - such as the release of a lock) rather than just blocking until notified that the change has occurred. The "adaptive" part comes from the policy decisions that control how long the thread will spin until eventually deciding to block.</p><p><strong>适应性自旋锁</strong> 一种锁优化技术，在这种技术中，线程自旋等待状态发生变化(通常是表示某个事件已经发生的标志——比如锁的释放)，而不仅仅是阻塞直到通知发生状态变化。“自适应”部分主要表现在控制线程自旋时长，和最终决定进入阻塞状态(停止自旋)。（自旋会消耗CPU资源，同时线程进入阻塞态会增加线程切换成本，自适应自旋是两者之间的平衡）</p><h2 id="biased-locking">biased locking</h2><p>An optimization in the VM that leaves an object as logically locked by a given thread even after the thread has released the lock. The premise is that if the thread subsequently reacquires the lock (as often happens), then reacquisition can be achieved at very low cost. If a different thread tries to acquire a biased lock then the bias must be revoked from the current bias owner.</p><p><strong>偏向锁</strong> 虚拟机层面的一种优化，对象在给定线程释放锁后仍处于逻辑锁定(偏向状态位为 1)状态。前提是，如果线程随后重新获得锁(这是经常发生的)，那么重新获取可以以非常低的成本实现。如果另一个线程试图获取偏向锁，则必须从当前偏向锁对象所有者处替换该偏向状态，也就是通过CAS替换对象头中的线程id。<br />题外话：这里其实涉及到对象头存储内容，其中除了1个bit位的偏向状态外，还有一部分是存储线程id的。也就是说，当前线程继续进入，不需要修改这个id就能直接获取到这个对象的锁。而修改这个线程id必须使用<strong>CAS</strong>来修改，相对应的性能消耗，还是比较大的。这里涉及到锁升级过程，这个消耗相比重量级锁，性能还是很快的。但是C<strong>AS</strong>称之为<strong>无锁算法</strong>（只是表明是非重量级锁，都叫无锁，其实并非没有锁，只是不需要进入内核，不需要切换线程(上下文切换：用户线程与内核线程切换)）就能实现加锁的效果。</p><h2 id="block-start-table">block start table</h2><p>A table that shows, for a region of the heap, where the object starts that comes on to this region from lower addresees. Used, for example, with the <a href="https://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html#cardTable">card table</a> variant of the <a href="https://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html#rememberedSet">remembered set</a>.</p><p><strong>block start table(块开始表???大概是指对象起始位置存放的内容)</strong> 对于堆的某个区域，显示对象从较低的addresees进入该区域的起始位置的表(小端模式)。例如，使用记忆集的一种实现方式，卡表。<br />题外话：这个记忆集（remembered set）是为了解决跨带应用的垃圾收集相关的场景。</p><h2 id="bootstrap-classloader">bootstrap classloader</h2><p>The logical classloader that has responsibility for loading the classes (and resources) that are found in the boot-classpath - typically the core Java platform classes. Typically implemented as part of the VM, by historical convention the bootstrap classloader is represented by NULL at the Java API level.</p><p><strong>## 引导类加载器</strong> 负责加载在引导类路径中，找到的类(和资源)的逻辑类加载器——通常是Java平台的核心类。通常作为VM的一部分实现，根据历史约定，引导类加载器在Java API级别上用NULL表示。<br />题外话：XXX.class.getClassLoader().getParent().getParent();可以获取到引导类加载器 打印为null</p><h2 id="bytecode-verification">bytecode verification</h2><p>A step in the linking process of a class where the methods bytecodes are analyzed to ensure type-safety.</p><p><strong>字节码校验</strong> 类的链接过程中的一个步骤，在其中分析方法的字节码，以确保类型安全。</p><h2 id="c1-compiler">C1 compiler</h2><p>Fast, lightly optimizing bytecode compiler. Performs some value numbering, inlining, and class analysis. Uses a simple CFG-oriented SSA "high" IR, a machine-oriented "low" IR, a linear scan register allocation, and a template-style code generator.</p><p><strong>C1编译器</strong> 快速、轻度优化的字节码编译器。执行一些值的编号、代码嵌入和类分析。使用一个简单的面向cfg？？的SSA(？Static Single-Assignment，静态单赋值，一种寄存器分配算法?)“高”IR(求大佬帮忙翻译解释下吧)，一个面向机器的“低”IR，一个线性扫描寄存器分配，</p><h2 id="c2-compiler">C2 compiler</h2><p>Highly optimizing bytecode compiler, also known as 'opto'. Uses a "sea of nodes" SSA "ideal" IR, which lowers to a machine-specific IR of the same kind. Has a graph-coloring register allocator; colors all machine state, including local, global, and argument registers and stack. Optimizations include global value numbering, conditional constant type propagation, constant folding, global code motion, algebraic identities, method inlining (aggressive, optimistic, and/or multi-morphic), intrinsic replacement, loop transformations (unswitching, unrolling), array range check elimination.</p><p><strong>C2编译器</strong> 高度优化的字节码编译器，也称为“opto”。使用“大量节点”SSA“理想”IR，降低到同一类型的特定机器的IR。具有图形标记寄存器分配器?;标记所有机器状态，包括本地、全局和参数寄存器和堆栈。优化包括全局值编号、条件常量类型传播、常量折叠、全局代码移动、代数标识、方法内联(主动的、乐观的和/或多态的)、内在替换、循环转换(不交换、展开)、数组范围检查消除。</p><h2 id="card-table">card table</h2><p>A kind of <a href="https://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html#rememberedSet">remembered set</a> that records where oops have changed in a generation.</p><p><strong>卡表</strong> 卡表 一种记忆集（remembered set，是个抽象的数据结构）的实现方式，记录了oops(对象指针)发生的跨代引用的起始内存地址。</p><h2 id="class-data-sharing">class data sharing</h2><p>A startup optimization that records the in-memory form of some classes, so that that form can be mapped into memory by a subsequent run of the virtual machine, rather than loading those classes from their class files.</p><p><strong>类的数据共享</strong> 一种启动优化是，直接在内存中存储一些类的结构，以便后续运行虚拟机时可以将该结构映射到内存中，而不是从类文件中加载这些类。这段的大致意思表示class对象字节码信息直接存储在方法区（1.8后的元空间）中！通过new的对象类元信息映射，来执行代码！</p><h2 id="class-hierachy-analysis">class hierachy analysis</h2><p>Also known as 'CHA'. Analysis of the class tree used by a compiler to determine if the receiver at a virtual call site has a single implementor. If so, the callee can be inlined or the compiler can employ some other static call mechanism.</p><p><strong>类层次分析</strong> 也叫“CHA”。编译器对类树（层级）进行分析，以确定虚拟调用站点上的接收器是否只有一个实现者（双亲委派机制？）。如果是这样，被调用方可以内联，或者编译器可以使用其他一些静态调用机制。</p><h2 id="code-cache">code cache</h2><p>A special heap that holds compiled code. These objects are not relocated by the GC, but may contain oops, which serve as GC roots.</p><p><strong>代码缓存</strong> 保存已编译代码的特殊堆空间。这些对象不由GC重新定位，但可能包含oops，用作GC根。</p><h2 id="compaction">compaction</h2><p>A garbage collection technique that results in live objects occupying a dense portion of the virtual address space, and available space in another portion of the address space. Cf. <a href="https://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html#freeList">free list</a>.</p><p><strong>压缩算法</strong> 一种垃圾收集技术，用于将活动对象压缩到虚拟地址空间的密集部分，以便获得地址空间的另一部分中的空间可用。参见空闲列表。</p><h2 id="concurrency">concurrency</h2><p>Concurrency, or more specifically concurrent programming, is the logical simultaneous execution of multiple instruction streams. If multiple processors are available then the logical simultaneity can be physical simultaneity - this is known as 'parallelism'</p><p><strong>并发机制</strong> 并发，或者更具体地说并发编程，是多个指令流的逻辑同步执行。如果有多个处理器可用，那么逻辑同时性也可以是物理同时性——这被称为“并行性”。</p><h2 id="concurrent-garbage-collection">concurrent garbage collection</h2><p>A garbage collection algorithm that does most (if not all) of its work while the Java application threads are still running.</p><p><strong>并发垃圾收集</strong> 在Java应用程序线程仍在运行时，同时垃圾收集算法也能执行其大部分(即便不是全部)工作。</p><h2 id="copying-garbage-collection">copying garbage collection</h2><p>A garbage collection algorithm that moves objects during the collection.</p><p><strong>复制垃圾收集</strong> 在收集期间移动对象的垃圾收集算法。（复制清除算法！参考堆中新生代的幸存者区S0,S1）</p><h2 id="deoptimization">deoptimization</h2><p>The process of converting an compiled (or more optimized) stack frame into an interpreted (or less optimized) stack frame. Also describes the discarding of an nmethod whose dependencies (or other assumptions) have been broken. Deoptimized nmethods are typically recompiled to adapt to changing application behavior. Example: A compiler initially assumes a reference value is never null, and tests for it using a trapping memory access. Later on, the application uses null values, and the method is deoptimized and recompiled to use an explicit test-and-branch idiom to detect such nulls.</p><p><strong>逆优化</strong> 将已编译(或优化程度更高的)堆栈帧转换为解释(或优化程度更低的)堆栈帧的过程。也描述了丢弃一个依赖关系(或其他假设)被打破的nmethod。经过优化的nmethods通常会重新编译以适应应用程序行为的变化。示例:编译器最初假设引用值决不为空，并使用捕获内存访问对其进行测试。稍后，应用程序将使用空值，该方法将进行优化并重新编译，以使用显式的测试和分支习语来检测这些空值。<br />题外话：这个不是很懂，感觉可能是指的指令重排？后续抽空进行修改吧</p><h2 id="dependency">dependency</h2><p>An optimistic assumption associated with an nmethod, which allowed the compiler to emit improved code into the nmethod. Example: A given class has no subclasses, which simplifies method dispatch and type testing. The loading of new classes (or replacement of old classes) can cause dependencies to become false, which requires dependent nmethods to be discarded and activations of those nmethods to be deoptimized.</p><p><strong>依赖</strong> 一个与nmethod相关的乐观假设，它允许编译器将改进的代码发送到nmethod中。示例:给定的类没有子类，子类简化了方法分发和类型测试。加载新类(或替换旧类)会导致依赖关系变为false，这需要丢弃依赖的nmethods，并对这些nmethods的激活进行优化。</p><h2 id="eden">eden</h2><p>A part of the Java object heap where object can be created efficiently.</p><p><strong>伊甸区</strong> Java对象堆的一部分，在这里可以高效地创建对象。</p><h2 id="free-list">free list</h2><p>A storage management technique in which unused parts of the Java object heap are chained one to the next, rather than having all of the unused part of the heap in a single block.</p><p><strong>空闲列表</strong> 一种存储管理技术，在这种技术中，将Java对象堆中未使用的部分逐个用空闲列表标记起来，而不是将堆中所有未使用的部分都放在一个块中（标记整理算法才是这个）。<br />题外话：标记清理造成的碎片，可用空闲内存块进行记录的地方。</p><h2 id="garbage-collectiongc">garbage collection（GC）</h2><p>The automatic management of storage.</p><p><strong>垃圾收集/GC</strong> 对内存的自动管理。</p><h2 id="garbage-collection-rootgc-root">garbage collection root（GC Root）</h2><p>A pointer into the Java object heap from outside the heap. These come up, e.g., from static fields of classes, local references in activation frames, etc.</p><p><strong>垃圾收集根</strong> 从堆外部指向Java对象堆（地址）的指针。例如，来自类对象的静态字段、虚拟机栈中的栈帧中的局部变量表引用，等等。（有错误）</p><h2 id="gc-map">GC map</h2><p>A description emitted by the JIT (C1 or C2) of the locations of oops in registers or on stack in a compiled stack frame. Each code location which might execute a safepoint has an associated GC map. The GC knows how to parse a frame from a stack, to request a GC map from a frame's nmethod, and to unpack the GC map and manage the indicated oops within the stack frame.</p><p><strong>GC映射</strong> 由JIT (C1或C2)发出的关于oops在已编译堆栈帧中的寄存器或堆栈上的位置的描述。可能执行安全点的每个代码位置都有一个关联的GC映射。GC知道如何从堆栈中解析一个框架，如何从框架的nmethod中请求一个GC映射，如何解压缩GC映射并管理堆栈框架中指示的oops。<br />题外话：应该是我们说了解的OopMap，有了它就不需要始终从GC root开始查找。</p><h2 id="generational-garbage-collection">generational garbage collection</h2><p>A storage management technique that separates objects expected to be referenced for different lengths of time into different regions of the heap, so that different algorithms can be applied to the collection of those regions.</p><p><strong>分代垃圾收集</strong> 一种存储管理技术，它将期望在不同时间内引用的对象分离到堆的不同区域，以便可以对这些区域的集合应用不同的垃圾回收算法。<br />题外话：minor GC，full GC，major GC</p><h2 id="handle">handle</h2><p>A memory word containing an oop. The word is known to the GC, as a root reference. C/C++ code generally refers to oops indirectly via handles, to enable the GC to find and manage its root set more easily. Whenever C/C++ code blocks in a safepoint, the GC may change any oop stored in a handle. Handles are either 'local' (thread-specific, subject to a stack discipline though not necessarily on the thread stack) or global (long-lived and explicitly deallocated). There are a number of handle implementations throughout the VM, and the GC knows about them all.</p><p><strong>句柄</strong> 包含oop的内存字。知道这个词GC，它是一个根引用。C/ c++代码通常通过句柄间接引用oops，以使GC更容易地查找和管理它的根集。每当C/ c++代码在安全点中阻塞时，GC可以更改存储在句柄中的任何oop。句柄要么是“本地的”(特定于线程，受堆栈规则约束，但不一定在线程堆栈上)，要么是全局的(长期存在且显式释放)。在整个VM中有许多句柄实现，而GC知道关于这些的所有。题外话：现在都不怎么使用句柄了！</p><h2 id="hot-lock">hot lock</h2><p>A lock that is highly contended.</p><p><strong>It makes recommendations on GC usage, identifies </strong>hot** methods, highlights areas of <strong>lock</strong> contention, and provides information on the environment the application is running in. <a href="audio:http://dict.youdao.com/dictvoice?audio=It+makes+recommendations+on+GC+usage%2C+identifies+hot+methods%2C+highlights+areas+of+lock+contention%2C+and+provides+information+on+the+environment+the+application+is+running+in.&amp;le=eng"><img src="tts.png" /></a> (50KB) 它提供关于GC使用的建议、识别热方法、突出显示锁争用区域，提供关于应用程序的运行环境的信息。**（词典信息）</p><p><strong>热锁</strong> 高度竞争的锁</p><h2 id="interpreter">interpreter</h2><p>A VM module which implements method calls by individually executing bytecodes. The interpreter has a limited set of highly stylized stack frame layouts and register usage patterns, which it uses for all method activations. The Hotspot VM generates its own interpreter at start-up time.</p><p><strong>解释器</strong> 一个VM模块，它通过单独执行字节码来实现方法调用。解释器有一组有限的高度程式化的堆栈框架布局和寄存器使用模式，它适用于所有的方法激活。Hotspot VM在启动时生成自己的解释器。</p><h2 id="jit-compilers">JIT compilers</h2><p>An on-line compiler which generates code for an application (or class library) during execution of the application itself. ("JIT" stands for "just in time".) A JIT compiler may create machine code shortly before the first invocation of a Java method. Hotspot compilers usually allow the interpreter ample time to "warm up" Java methods, by executing them thousands of times. This warm-up period allows a compiler to make better optimization decisions, because it can observe (after initial class loading) a more complete class hierarchy. The compiler can also inspect branch and type profile information gathered by the interpreter.</p><p><strong>## JIT编译器</strong> 一种在线编译器，它在应用程序本身执行期间为应用程序(或类库)生成代码。(“JIT”代表“just in time”。)JIT编译器可能会在第一次调用Java方法之前创建机器代码。Hotspot编译器通常允许解释器有充足的时间来“预热”Java方法，方法是执行这些方法数千次。这个预热阶段允许编译器做出更好的优化决策，因为它可以观察(在初始类加载之后)更完整的类层次结构。编译器还可以检查解释器收集的分支和类型概要信息。</p><h2 id="jni">JNI</h2><p>The Java Native Interface - a specification and API for how Java code can call out to native C code, and how native C code can call into the Java VM</p><p><strong>java本地接口</strong> Java本地接口——一个规范和API，用于说明Java代码如何调用本机C代码，以及本机C代码如何在Java VM中调</p><h2 id="jvm-ti">JVM TI</h2><p>The Java Virtual Machine Tools Interface - a standard specification and API that is used by development and monitoring tools. See <a href="https://openjdk.java.net/groups/hotspot/docs/Serviceability.html#tjvmti">JVM TI</a> for more information.</p><p><strong>Java虚拟工具接口</strong> Java虚拟工具接口——开发和监控工具使用的标准规范和API。更多信息请参见JVM TI。</p><h2 id="klass-pointer">klass pointer</h2><p>The second word of every object header. Points to another object (a metaobject) which describes the layout and behavior of the original object. For Java objects, the "klass" contains a C++ style "vtable".</p><p><strong>类型指针</strong> 每个对象头的第二个字。指向另一个对象(元对象)，该对象描述原始对象的布局和行为。对于Java对象，“klass”包含一个c++风格的“虚函数表”。</p><h2 id="mark-word">mark word</h2><p>The first word of every object header. Usually a set of bitfields including synchronization state and identity hash code. May also be a pointer (with characteristic low bit encoding) to synchronization related information. During GC, may contain GC state bits.</p><p><strong>标记字符</strong> 每个对象头的第一个字节。通常是一组位域，包括同步状态和身份哈希码。也可能是同步相关信息的指针(具有低比特编码特征)。在GC期间，可能包含GC状态位。<br />题外话：也就是对象头中的信息，这个是32为的对象头！但是还不全，这里只包含重要信息，其他64位的，我截个图出来！ [[Pasted image 20220219173940.png]]</p><h2 id="nmethod">nmethod</h2><p>A block of executable code which implements some Java bytecodes. It may be a complete Java method, or an 'OSR' method. It routinely includes object code for additional methods inlined by the compiler.</p><p><strong>n方法</strong> 实现某些Java字节码的可执行代码块。它可能是一个完整的Java方法，或者是一个“OSR”方法。它通常包括由编译器内联的其他方法的目标代码。<br />题外话：on-stack replacement（栈上替换编译）</p><h2 id="object-header">object header</h2><p>Common structure at the beginning of every GC-managed heap object. (Every oop points to an object header.) Includes fundamental information about the heap object's layout, type, GC state, synchronization state, and identity hash code. Consists of two words. In arrays it is immediately followed by a length field. Note that both Java objects and VM-internal objects have a common object header format.</p><p><strong>对象头</strong> 在每个gc管理的堆对象开始处的公共结构。(每个oop都指向一个对象头。)包括关于堆对象的布局、类型、GC状态、同步状态和标识哈希码的基本信息。由两个词组成。在数组中，紧随其后的是长度字段。注意，Java对象和vm内部对象都有一个通用的对象头格式。<br />题外话：oop中的重要部分！注意小端模式查看二进制对象头！</p><h2 id="object-promotion">object promotion</h2><p>The act of copying an object from one generation to another.</p><p><strong>对象晋升</strong> 将一个对象从新生代复制到老年代的行为。 比较一下对象担保机制</p><h2 id="old-generation">old generation</h2><p>A region of the Java object heap that holds object that have remained referenced for a while.</p><p><strong>老年代</strong> 对象堆中的一个区域，用于保存被引用了一段时间的对象。</p><h2 id="on-stack-replacement">on-stack replacement</h2><p>Also known as 'OSR'. The process of converting an interpreted (or less optimized) stack frame into a compiled (or more optimized) stack frame. This happens when the interpreter discovers that a method is looping, requests the compiler to generate a special nmethod with an entry point somewhere in the loop (specifically, at a backward branch), and transfers control to that nmethod. A rough inverse to deoptimization.</p><p><strong>栈上替换编译</strong>查询是否是标量替换 也被称为OSR。将解释的(或优化较少的)堆栈转换为编译的(或优化较多的)堆栈的过程。当解释器发现一个方法正在循环时，就会请求编译器生成一个特殊的nmethod，在循环的某个地方有一个入口点(特别是在一个向后的分支上)，然后将控制权转移给那个nmethod。反优化的粗略倒转。<br />题外话：有点懵了！</p><h2 id="oop">oop</h2><p>An object pointer. Specifically, a pointer into the GC-managed heap. (The term is traditional. One 'o' may stand for 'ordinary'.) Implemented as a native machine address, not a handle. Oops may be directly manipulated by compiled or interpreted Java code, because the GC knows about the liveness and location of oops within such code. (See GC map.) Oops can also be directly manipulated by short spans of C/C++ code, but must be kept by such code within handles across every safepoint.</p><p><strong>普通对象指针</strong> 一个对象的指针。具体地说，是指向gc托管堆的指针。(这个词是传统的。第一个o可以代表“普通”。)实际为本机地址，而不是句柄。Oops可以由编译或解释的Java代码直接操作，因为GC知道Oops在这些代码中的活动和位置。GC(见GC map)。Oops还可以由短时间的C/ c++代码直接操作，但是必须由这些代码在每个安全点的句柄中保存。</p><h2 id="parallel-classloading">parallel classloading</h2><p>The ability to have multiple classes/type be in the process of being loaded by the same classloader at the same time.</p><p><strong>## 并行类加载</strong> 在同一个类加载器同时加载多个类/类型的能力。</p><h2 id="parallel-garbage-collection">parallel garbage collection</h2><p>A garbage collection algorithm that uses multiple threads of control to perform more efficiently on multi-processor boxes.</p><p><strong>并行垃圾收集</strong> 一种垃圾收集算法，它使用多个控制线程来更有效地在多处理器机器上执行。</p><h2 id="permanent-generation">permanent generation</h2><p>A region of the address space that holds object allocated by the virtual machine itself, but which is managed by the garbage collector. The permanent generation is mis-named, in that almost all of the objects in it <em>can</em> be collected, though they tend to be referenced for a long time, so they rarely become garbage.</p><p><strong>永久代</strong> 地址空间的一个区域，它包含由虚拟机本身分配但由垃圾收集器管理的对象。永久代的名称是错误的，其实它中间的几乎所有对象都可以被收集，只是因为它们往往会被很长时间引用，所以它们很少会变成垃圾，才被叫做永久代。<br />题外话：存放已被虚拟机加载的类的类信息、常量、静态变量、即时编译器编译后的代码 - 对HotSpot虚拟机来说，被称为永久代（Permanent Generation）。 - jdk1.6及之前：有永久代，常量池在方法区 - jdk1.7：有永久代，但已逐步“去永久代”，常量池转移到堆中 - jdk8及之后：无永久代，常量池在元空间</p><h2 id="remembered-set">remembered set</h2><p>A data structure that records pointers between generations.</p><p><strong>记忆集</strong> 记录各代（新生代、老年代）之间，存在跨代引用的指针的数据结构。<br />题外话：这个结构把老年代划分成若干小块， 标识出老年代的哪一块内存会存在跨代引用。</p><h2 id="safepoint">safepoint</h2><p>A point during program execution at which all GC roots are known and all heap object contents are consistent. From a global point of view, all threads must block at a safepoint before the GC can run. (As a special case, threads running JNI code can continue to run, because they use only handles. During a safepoint they must block instead of loading the contents of the handle.) From a local point of view, a safepoint is a distinguished point in a block of code where the executing thread may block for the GC. Most call sites qualify as safepoints. There are strong invariants which hold true at every safepoint, which may be disregarded at non-safepoints. Both compiled Java code and C/C++ code be optimized between safepoints, but less so across safepoints. The JIT compiler emits a GC map at each safepoint. C/C++ code in the VM uses stylized macro-based conventions (e.g., TRAPS) to mark potential safepoints.</p><p><strong>安全点</strong> 程序执行期间所有GC根已知且所有堆对象内容一致的点。从全局的角度来看，所有线程必须在安全点阻塞后，GC才能运行。(作为特殊情况，运行JNI代码的线程可以继续运行，因为它们只使用句柄。在安全点期间，它们必须阻塞而不是装入手柄的内容。)从本地的角度来看，安全点是代码块中的一个特殊点，在这个点上执行的线程可能阻塞GC。大多数呼叫站点都可以作为安全点。在每个安全点上都存在强不变量，在非安全点上可以忽略。编译后的Java代码和C/ c++代码在安全点之间都能得到优化，但在安全点之间就没那么优化了。JIT编译器在每个安全点发出一个GC映射。VM中的C/ c++代码使用程式化的基于宏的约定(例如，陷阱)来标记潜在的安全点！<br />题外话；通常会根据是否具备让程序长时间执行的特征”为标准作为SafePoint，比如：方法调用、循环跳转、异常跳转等。</p><h2 id="sea-of-nodes">sea-of-nodes</h2><p>The high-level intermediate representation in C2. It is an SSA form where both data and control flow are represented with explicit edges between nodes. It differs from forms used in more traditional compilers in that nodes are not bound to a block in a control flow graph. The IR allows nodes to float within the sea (subject to edge constraints) until they are scheduled late in the compilation process.</p><p><strong>大量节点</strong> C2编译器中的高级中间表现。它是一种SSA形式，其中数据和控制流都用节点之间的显式边表示。它与更传统的编译器中使用的表单不同，因为节点不绑定到控制流图中的块。IR允许节点在sea中浮动(受制于边界约束)，直到它们被安排在编译过程的后期。<br />题外话：完全不懂，希望大佬能精简和指错！</p><h2 id="serviceability-agent-sa">Serviceability Agent (SA)</h2><p>The Serviceablity Agent is collection of Sun internal code that aids in debugging HotSpot problems. It is also used by several JDK tools - jstack, jmap, jinfo, and jdb. See <a href="https://openjdk.java.net/groups/hotspot/docs/Serviceability.html#tsa">SA</a> for more information.</p><p><strong>SA 可服务器性代理</strong> The Serviceablity Agent is collection of Sun internal code that aids in debugging HotSpot problems. It is also used by several JDK tools - jstack, jmap, jinfo, and jdb. See SA for more information.<br />Serviceablity Agent是Sun内部代码的集合，帮助调试热点问题。它还被一些JDK工具使用——jstack、jmap、jinfo和jdb。有关更多信息，请参见SA。</p><h2 id="stackmap">stackmap</h2><p>Refers to the StackMapTable attribut e or a particular StackMapFrame in the table.</p><p><strong>堆栈映射</strong> 引用堆栈映射表的属性或表中的特定堆栈映射框架。</p><h2 id="stackmaptable">StackMapTable</h2><p>An attribute of the Code attribute in a classfile which contains type information used by the new verifier during verification. It consists of an array of StackMapFrames. It is generated automatically by javac as of JDK6.</p><p><strong>## 堆栈映射表</strong> 类文件中代码的一种属性，它包含新验证者在验证期间使用的类型信息。它由一个stackmapframe数组组成。它是由javac在JDK6时自动生成的。</p><h2 id="survivor-space">survivor space</h2><p>A region of the Java object heap used to hold objects. There are usually a pair of survivor spaces, and collection of one is achieved by copying the referenced objects in one survivor space to the other survivor space.</p><p><strong>## 幸存者区</strong> Java对象堆中用于保存对象的区域。通常有一对幸存者空间，通过将一个幸存者空间中引用的对象复制到另一个幸存者空间，可以实现对一个幸存者空间的收集。<br />题外话：这个就是上面说说的复制垃圾算法！</p><h2 id="synchronization">synchronization</h2><p>In general terms this is the coordination of concurrent activities to ensure the safety and liveness properties of those activities. For example, protecting access to shared data by using a lock to guard all code paths to that data.</p><p><strong>同步化</strong> 一般来说，这是同时进行的活动的协调，以确保这些活动的安全性和活性。例如，通过使用锁保护到该数据的所有代码路径来保护对共享数据的访问。</p><h2 id="tlab">TLAB</h2><p>Thread-local allocation buffer. Used to allocate heap space quickly without synchronization. Compiled code has a "fast path" of a few instructions which tries to bump a high-water mark in the current thread's TLAB, successfully allocating an object if the bumped mark falls before a TLAB-specific limit address.</p><p><strong>## 本地线程分配缓冲区</strong> 线程本地分配缓冲区。用于在不同步的情况下快速分配堆空间。编译后的代码有一些指令的“快速路径”，这些指令试图在当前线程的TLAB中达到一个高水位标记，如果碰撞标记落在特定TLAB的限制地址之前，就可以成功地分配一个对象。</p><h2 id="uncommon-trap">uncommon trap</h2><p>When code generated by C2 reverts back to the interpreter for further execution. C2 typically compiles for the common case, allowing it to focus on optimization of frequently executed paths. For example, C2 inserts an uncommon trap in generated code when a class that is uninitialized at compile time requires run time initialization.</p><p><strong>## 不常见陷阱</strong> 当C2生成的代码返回到解释器进行进一步执行时。C2通常针对常见情况进行编译，这使得它能够专注于优化经常执行的路径。例如，当编译时未初始化的类需要运行时初始化时，C2会在生成的代码中插入一个不常见的陷阱。<br />题外话：内存屏障？？</p><h2 id="verifier">verifier</h2><p>The software code in the VM which performs bytecode verification.</p><p><strong>## 验证器</strong> 虚拟机中执行字节码验证的软件代码。</p><h2 id="vm-operations">VM Operations</h2><p>Operations in the VM that can be requested by Java threads, but which must be executed, in serial fashion by a specific thread known as the VM thread. These operations are often synchronous, in that the requester will block until the VM thread has completed the operation. Many of these operations also require that the VM be brought to a safepoint before the operation can be performed - a garbage collection request is a simple example.</p><p><strong>## 虚拟机操作</strong> VM中可以由Java线程请求但必须由称为VM线程的特定线程以串行方式执行的操作。这些操作通常是同步的，因为请求程序将阻塞，直到VM线程完成操作。许多这些操作还要求在执行操作之前将VM转移到安全点——垃圾收集请求就是一个简单的例子。<br />题外话：例如main方法中，创建线程，是有一个main线程串行启动线程的创建！</p><h2 id="write-barrier">write barrier</h2><p>Code that is executed on every oop store. For example, to maintain a remembered set.</p><p><strong>写屏障</strong> 在每个oop存储上已执行的代码。例如，维护一个已记住的集合。</p><h2 id="young-generation">young generation</h2><p>A region of the Java object heap that holds recently-allocated objects.</p><p><strong>新生代也叫年轻代</strong> Java对象堆中保存最近分配的对象的区域。</p><hr /><h2 id="参考资料">参考资料</h2><ul><li><a href="https://union-click.jd.com/jdc?e=&amp;p=JF8BAMAJK1olXDYCV1lcDkgfC19MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksUBG4OGFMdQl9HCANtTRxxHT9gfVN1HGB8LCIHCh9tehIITVcZbQcyVF9cCEgeB2kJGWslXQEyAjBdCUoWAm4NGl8WbQcyVFlYDEgQB2wBGVsUVDYFVFdtURtFWTtLG1oVWTYyZF1tOHsXM2w4WTUTCgcEVQ1dCk4WBDsNHFhADVYFVV1YWB4QAGoKHw8SXTYAVV9ZAXs">深入理解Java虚拟机：JVM高级特性与最佳实践（第3版）</a></li><li><a href="https://union-click.jd.com/jdc?e=&amp;p=JF8BAMAJK1olXDYCV1dcC0kSBl9MRANLAjZbERscSkAJHTdNTwcKBlMdBgABFksUCm4LGV4QQl9HCANtChREdjt_GAV3Qxx_MiotTx1tR2tpTVcZbQcyVF9cCEgeB2kJGWslXQEyAjBdCUoWAm4NH1wSbQcyVFlYDEgQB24AG1oXXzYFVFdtURtFWTtLG1oVWTYyZF1tOHsXM2w4WTUUWVMDXF5UCk8VAWYNEl4dDQQFBw0PW0gWUTpaTlwUWTYAVV9ZAXs">虚拟机设计与实现 以JVM为例(图灵出品)</a></li><li>Open JDK官网 HotSpot Glossary of Terms: https://openjdk.java.net/groups/hotspot/docs/HotSpotGlossary.html</li></ul><hr /><h2 id="其他">其他</h2><!-- - 其中有些内容整理自互联网，如有侵权，请联系，我将及时处理- 本文采用[“知识共享” 署名-非商业性使用-相同方式共享2.5协议](http://creativecommons.org/licenses/by-nc-sa/2.5/ "知识产权")进行许可，转载请注署名（包含链接） --><!--- 其中有些内容整理自互联网，如有侵权，请联系，我将及时处理- 部分中文翻译待勘正，请以官网介绍及英文名为准- 本文采用[“知识共享” 署名-非商业性使用-相同方式共享2.5协议](http://creativecommons.org/licenses/by-nc-sa/2.5/ "知识产权")进行许可，转载请注署名（包含链接）- Your Name – [@YourTwitter](https://twitter.com/dbader_org) – YourEmail@example.com - [https://github.com/opalink](https://github.com/opalink/)--><!-- site:https://opal.ink&author:Mona2z --><!-- Markdown link & img dfn's --><!--本博客的所有原创作品采用[“知识共享” 署名-非商业性使用-相同方式共享2.5协议](http://creativecommons.org/licenses/by-nc-sa/2.5/ "知识产权")进行许可[![Creative Commons License](http://i.creativecommons.org/l/by/2.5/cn/88x31.png)](http://creativecommons.org/licenses/by/2.5/cn/)本文基于[署名 2.5 中国大陆](http://creativecommons.org/licenses/by/2.5/cn/ "Creative Commons Attribution 2.5 China Mainland License")许可协议发布，欢迎转载，演绎或用于商业目的，但是必须保留本文的署名[Mona2z](https://opal.ink/)（包含链接），具体操作方式可[参考此处](https://opal.ink/liccence "转载须知")。如您有任何疑问或者授权方面的协商，请[给我留言](https://opal.ink/about)。-->]]></content>
    
    
    <summary type="html">HotSpot术语表（翻译整理版）</summary>
    
    
    
    <category term="Java" scheme="https://withesse.co/categories/Java/"/>
    
    <category term="JVM" scheme="https://withesse.co/categories/Java/JVM/"/>
    
    
    <category term="jvm" scheme="https://withesse.co/tags/jvm/"/>
    
    <category term="hotspot" scheme="https://withesse.co/tags/hotspot/"/>
    
  </entry>
  
  <entry>
    <title>JVM概述</title>
    <link href="https://withesse.co/post/jvm-overview-guide/"/>
    <id>https://withesse.co/post/jvm-overview-guide/</id>
    <published>2019-12-17T09:37:18.000Z</published>
    <updated>2019-12-17T09:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java-jvm综述文章大纲">Java JVM综述文章大纲</h1><h2 id="引言">1. 引言</h2><ul><li>Java的普及性和重要性</li><li>JVM的角色和作用</li></ul><h2 id="jvm简介">2. JVM简介</h2><ul><li>JVM的定义</li><li>JVM的工作原理</li><li>JVM与Java语言的关系</li></ul><h2 id="jvm的架构">3. JVM的架构</h2><ul><li>类加载器（Class Loaders）</li><li>运行时数据区（Runtime Data Areas）</li><li>执行引擎（Execution Engine）</li><li>本地接口库（Native Interface）</li><li>垃圾回收（Garbage Collection）</li></ul><h2 id="类加载机制">4. 类加载机制</h2><ul><li>类的生命周期</li><li>类加载过程</li><li>类加载器的种类</li></ul><h2 id="运行时数据区解析">5. 运行时数据区解析</h2><ul><li>堆（Heap）</li><li>方法区（Method Area）</li><li>栈（Stacks）</li><li>程序计数器（Program Counter Register）</li><li>本地方法栈（Native Method Stack）</li></ul><h2 id="执行引擎">6. 执行引擎</h2><ul><li>解释器（Interpreter）</li><li>即时编译器（JIT Compiler）</li><li>垃圾回收</li></ul><h2 id="垃圾回收gc">7. 垃圾回收（GC）</h2><ul><li>GC的基本概念</li><li>GC算法（标记-清除、复制、标记-整理、分代收集）</li><li>GC调优</li></ul><h2 id="jvm性能监控与调优">8. JVM性能监控与调优</h2><ul><li>监控工具和方法</li><li>调优策略</li><li>调优案例</li></ul><h2 id="jvm的实现与发展">9. JVM的实现与发展</h2><ul><li>不同的JVM实现（HotSpot, J9, GraalVM等）</li><li>JVM的发展趋势</li></ul><h2 id="结论">10. 结论</h2><ul><li>JVM对Java生态系统的影响</li><li>JVM的未来展望</li></ul>]]></content>
    
    
    <summary type="html">JVM概述</summary>
    
    
    
    <category term="Java" scheme="https://withesse.co/categories/Java/"/>
    
    <category term="JVM" scheme="https://withesse.co/categories/Java/JVM/"/>
    
    
    <category term="jvm" scheme="https://withesse.co/tags/jvm/"/>
    
    <category term="hotspot" scheme="https://withesse.co/tags/hotspot/"/>
    
  </entry>
  
  <entry>
    <title>macOS dot_clean命令清理隐藏文件</title>
    <link href="https://withesse.co/post/macos-dot_clean/"/>
    <id>https://withesse.co/post/macos-dot_clean/</id>
    <published>2019-03-23T11:00:00.000Z</published>
    <updated>2019-03-23T11:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="macos-dot_clean命令清理隐藏文件">macOS dot_clean命令清理隐藏文件</h1><p>对于经常使用macOS的用户来说，可能会遇到因为从Windows系统中复制文件到macOS系统中而导致的一些问题。这些问题的根本原因在于Windows系统在处理文件时会产生一些隐藏文件和文件夹，这些文件和文件夹在macOS系统中并不被识别，因此在传输到macOS系统后可能会导致一些问题，如文件夹的数据丢失、文件夹打不开等。</p><p>这时候，我们可以用macOS系统中的dot_clean命令。本文将介绍dot_clean命令的作用、使用方法以及注意事项。</p><h2 id="dot_clean命令的作用">dot_clean命令的作用</h2><p>dot_clean命令的作用是清除macOS系统中的.DS_Store文件和其他隐藏文件。.DS_Store文件是macOS系统中的一种隐藏文件，主要用于存储文件夹的自定义属性和视图设置等信息，这些信息在Windows系统中并不被识别，因此会导致一些问题。除了.DS_Store文件，dot_clean命令还可以清除其他一些隐藏文件，如._文件和.Trashes文件等。</p><h2 id="dot_clean命令的使用方法">dot_clean命令的使用方法</h2><p>在终端中输入以下命令即可使用dot_clean命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dot_clean path<br></code></pre></td></tr></table></figure><p>其中，path表示需要清除隐藏文件的文件夹路径。如果需要清除当前目录下的隐藏文件，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dot_clean .<br></code></pre></td></tr></table></figure><p>需要注意的是，使用dot_clean命令时需要在命令后面加上需要清除隐藏文件的文件夹路径或者“.”，否则命令将无法执行。</p><h2 id="注意事项">注意事项</h2><p>在使用dot_clean命令时，需要注意以下几点：</p><ul><li>dot_clean命令会清除文件夹中的所有隐藏文件，因此在执行命令前需要确保文件夹中不存在重要的隐藏文件。</li><li>执行dot_clean命令时需要使用管理员权限，否则可能会出现权限不足的错误。</li><li>dot_clean命令可能会删除某些文件夹中的非隐藏文件，因此在执行命令前需要备份重要文件。</li></ul><!-- ## 结论总的来说，dot_clean命令是macOS系统中一个非常实用的命令，可以有效地解决从Windows系统复制文件到macOS系统后出现的一些问题。在使用dot_clean命令时需要注意一些细节，以免出现不必要的错误。如果您遇到了从Windows系统复制文件到macOS系统后出现的一些问题，不妨尝试使用dot_clean命令来解决。 -->]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;macos-dot_clean命令清理隐藏文件&quot;&gt;macOS dot_clean命令清理隐藏文件&lt;/h1&gt;
&lt;p&gt;对于经常使用macOS的用户来说，可能会遇到因为从Windows系统中复制文件到macOS系统中而导致的一些问题。这些问题的根本原因在于Windows</summary>
      
    
    
    
    <category term="Tools" scheme="https://withesse.co/categories/Tools/"/>
    
    <category term="MacOS" scheme="https://withesse.co/categories/Tools/MacOS/"/>
    
    
    <category term="macos" scheme="https://withesse.co/tags/macos/"/>
    
  </entry>
  
</feed>
